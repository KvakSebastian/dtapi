{"version":3,"sources":["./src/app/modules/admin/dashboard/dashboard.module.ts","./src/app/modules/admin/dashboard/dashboard.component.ts","./src/app/modules/admin/dashboard/dashboard.component.html","./src/app/modules/admin/dashboard/dashboard.service.ts"],"names":[],"mappings":"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","file":"dashboard-dashboard-module.js","sourcesContent":["import { NgModule } from '@angular/core';\nimport { RouterModule, Routes } from '@angular/router';\nimport { CommonModule } from '@angular/common';\nimport { SharedModule } from '../../../shared/modules/shared.module';\n\nimport { DashboardComponent } from './dashboard.component';\n\nconst routes: Routes = [{ path: '', component: DashboardComponent }];\n\n@NgModule({\n    declarations: [DashboardComponent],\n    imports: [CommonModule, SharedModule, RouterModule.forChild(routes)],\n})\nexport class DashboardModule {}\n","import { Component, OnInit } from '@angular/core';\nimport { BreakpointObserver } from '@angular/cdk/layout';\nimport { CardsResponsiveOptions } from './CardsOptions';\nimport { DashboardService } from './dashboard.service';\nimport { forkJoin } from 'rxjs';\n\n@Component({\n    selector: 'app-dashboard',\n    templateUrl: './dashboard.component.html',\n    styleUrls: ['./dashboard.component.scss'],\n    providers: [DashboardService],\n})\nexport class DashboardComponent implements OnInit {\n    CARDSDATA: Array<{ title: string; icon: string; count: any; link: string }>;\n\n    ResponsiveData: CardsResponsiveOptions = {\n        breakpoint: 4,\n        rowHeight: 400,\n        isXLScreen: '(min-width: 1250px)',\n        isLGScreen: '(max-width: 1250px)',\n        isMDScreen: '(max-width: 1000px)',\n        isSMScreen: '(max-width: 780px)',\n        isMSScreen: '(max-width: 460px)',\n    };\n    layoutChangesMedia = this.breakpointObserver.observe([\n        this.ResponsiveData.isXLScreen,\n        this.ResponsiveData.isLGScreen,\n        this.ResponsiveData.isMDScreen,\n        this.ResponsiveData.isSMScreen,\n        this.ResponsiveData.isMSScreen,\n    ]);\n    layoutChange(result: any): void {\n        for (const item in result) {\n            if (result[item]) {\n                switch (item) {\n                    case this.ResponsiveData.isXLScreen:\n                        this.ResponsiveData.breakpoint = 4;\n                        this.ResponsiveData.rowHeight = 380;\n                        break;\n                    case this.ResponsiveData.isLGScreen:\n                        this.ResponsiveData.breakpoint = 3;\n                        this.ResponsiveData.rowHeight = 320;\n                        break;\n                    case this.ResponsiveData.isMDScreen:\n                        this.ResponsiveData.breakpoint = 3;\n                        this.ResponsiveData.rowHeight = 280;\n                        break;\n                    case this.ResponsiveData.isSMScreen:\n                        this.ResponsiveData.breakpoint = 2;\n                        this.ResponsiveData.rowHeight = 230;\n                        break;\n                    case this.ResponsiveData.isMSScreen:\n                        this.ResponsiveData.breakpoint = 1;\n                        break;\n                }\n            }\n        }\n    }\n\n    constructor(\n        private breakpointObserver: BreakpointObserver,\n        private infoservice: DashboardService\n    ) {}\n\n    ngOnInit(): void {\n        this.layoutChangesMedia.subscribe((result) => {\n            this.layoutChange(result.breakpoints);\n        });\n\n        this.CARDSDATA = [\n            {\n                title: 'Факультети',\n                icon: 'account_balance',\n                count: null,\n                link: '/admin/faculties',\n            },\n            {\n                title: 'Групи',\n                icon: 'groups',\n                count: null,\n                link: '/admin/group',\n            },\n            {\n                title: 'Спеціальності',\n                icon: 'dns',\n                count: null,\n                link: '/admin/speciality',\n            },\n            {\n                title: 'Предмети',\n                icon: 'collections_bookmark',\n                count: null,\n                link: '/admin/subjects',\n            },\n            {\n                title: 'Cтуденти',\n                icon: 'how_to_reg',\n                count: null,\n                link: '/admin/group',\n            },\n            {\n                title: 'Адміни',\n                icon: 'supervised_user_circle',\n                count: null,\n                link: '/admin/admins',\n            },\n            {\n                title: 'Результати',\n                icon: 'insights',\n                count: null,\n                link: '/admin/results',\n            },\n            {\n                title: 'Протокол',\n                icon: 'contact_page',\n                count: null,\n                link: '/admin/protocol',\n            },\n        ];\n\n        forkJoin({\n            FacultiesNumber: this.infoservice.getFacultiesNumber(),\n            GroupsNumber: this.infoservice.getGroupsNumber(),\n            SpecialitiesNumber: this.infoservice.getSpecialitiesNumber(),\n            SubjectNumber: this.infoservice.getSubjectsNumber(),\n            StudentsNumber: this.infoservice.getStudentsNumber(),\n            AdminsNumber: this.infoservice.getAdminsNumber(),\n        }).subscribe((result) => {\n            this.CARDSDATA.forEach((item, index) => {\n                index === 0 ? (item.count = result.FacultiesNumber) : null;\n                index === 1 ? (item.count = result.GroupsNumber) : null;\n                index === 2 ? (item.count = result.SpecialitiesNumber) : null;\n                index === 3 ? (item.count = result.SubjectNumber) : null;\n                index === 4 ? (item.count = result.StudentsNumber) : null;\n                index === 5 ? (item.count = result.AdminsNumber) : null;\n            });\n        });\n    }\n}\n","<div class=\"grid-container\">\n    <h1 class=\"mat-h1 entity-title\">\n        <mat-icon class=\"entity-title-icon\">dashboard </mat-icon>\n        Головна\n    </h1>\n    <mat-grid-list\n        [cols]=\"ResponsiveData.breakpoint\"\n        [rowHeight]=\"ResponsiveData.rowHeight\"\n    >\n        <mat-grid-tile *ngFor=\"let item of CARDSDATA\">\n            <mat-card class=\"dashboard-card\">\n                <mat-card-header>\n                    <mat-card-title> {{ item.title }} </mat-card-title>\n                </mat-card-header>\n                <mat-card-content class=\"dashboard-card-content\">\n                    <a\n                        routerLink=\"{{ item.link }}\"\n                        class=\"dashboard-card-link\"\n                    ></a>\n                    <div class=\"dashboard-card-content__container\">\n                        <mat-icon class=\"dashboard-card-content__icon\">\n                            {{ item.icon }}\n                        </mat-icon>\n                        <a\n                            routerLink=\"{{ item.link }}\"\n                            mat-fab\n                            color=\"primary\"\n                            class=\"dashboard-card-content__count\"\n                        >\n                            {{ item.count }}\n                        </a>\n                        <a\n                            routerLink=\"{{ item.link }}\"\n                            mat-flat-button\n                            class=\"dashboard-card-content__link\"\n                            color=\"primary\"\n                            >Перейти</a\n                        >\n                    </div>\n                </mat-card-content>\n            </mat-card>\n        </mat-grid-tile>\n    </mat-grid-list>\n</div>\n","import { HttpClient } from '@angular/common/http';\nimport { Injectable } from '@angular/core';\nimport { Observable } from 'rxjs/internal/Observable';\nimport { pluck } from 'rxjs/operators';\n\nimport { environment } from 'src/environments/environment';\n\n@Injectable()\nexport class DashboardService {\n    constructor(private httpInstance: HttpClient) {}\n\n    getFacultiesNumber(): Observable<any> {\n        return this.httpInstance\n            .get(`${environment.BASEURL}Faculty/countRecords`)\n            .pipe(pluck('numberOfRecords'));\n    }\n    getGroupsNumber(): Observable<any> {\n        return this.httpInstance\n            .get(`${environment.BASEURL}Group/countRecords`)\n            .pipe(pluck('numberOfRecords'));\n    }\n    getSpecialitiesNumber(): Observable<any> {\n        return this.httpInstance\n            .get(`${environment.BASEURL}Speciality/countRecords`)\n            .pipe(pluck('numberOfRecords'));\n    }\n    getSubjectsNumber(): Observable<any> {\n        return this.httpInstance\n            .get(`${environment.BASEURL}Subject/countRecords`)\n            .pipe(pluck('numberOfRecords'));\n    }\n    getStudentsNumber(): Observable<any> {\n        return this.httpInstance\n            .get(`${environment.BASEURL}Student/countRecords`)\n            .pipe(pluck('numberOfRecords'));\n    }\n    getAdminsNumber(): Observable<any> {\n        return this.httpInstance\n            .get(`${environment.BASEURL}AdminUser/countRecords`)\n            .pipe(pluck('numberOfRecords'));\n    }\n}\n"],"sourceRoot":"webpack:///"}