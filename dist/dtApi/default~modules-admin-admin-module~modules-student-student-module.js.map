{"version":3,"sources":["./src/app/shared/services/alert.service.ts","./src/app/modules/student/Messages.ts"],"names":[],"mappings":"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","file":"default~modules-admin-admin-module~modules-student-student-module.js","sourcesContent":["import { Injectable } from '@angular/core';\nimport { ModalService } from './modal.service';\nimport { AlertComponent } from '../components/alert/alert.component';\nimport { MatSnackBar } from '@angular/material/snack-bar';\n\n@Injectable({\n    providedIn: 'root',\n})\nexport class AlertService {\n    constructor(\n        private modalService: ModalService,\n        private snackBar: MatSnackBar\n    ) {}\n\n    message(message: string): void {\n        this.snackBar.open(message, 'x', {\n            duration: 3000,\n            horizontalPosition: 'center',\n            verticalPosition: 'bottom',\n            panelClass: ['message-snackbar'],\n        });\n    }\n\n    warning(message: string): void {\n        this.modalService.openModal(AlertComponent, {\n            data: {\n                message,\n                title: 'Попередження',\n                icon: 'warning',\n            },\n        });\n    }\n\n    error(message: string): void {\n        this.modalService.openModal(AlertComponent, {\n            data: {\n                message,\n                title: 'Помилка',\n                icon: 'error',\n            },\n        });\n    }\n}\n","import {\n    StudentProfile,\n    TestDate,\n    TestDetails,\n} from '../../shared/interfaces/student.interfaces';\nimport {\n    TestPlayerResponse,\n    TestResult,\n} from '../../shared/interfaces/test-player.interfaces';\n\n// Logout Messages //\ntype Logout = 'error' | 'logout' | 'testInProcess' | 'checkError' | 'result';\n\nexport function logoutMessages(logout: Logout, result?: TestResult): string {\n    if (logout === 'error') {\n        return 'Сталася помилка при виході. Спробуйте знову';\n    } else if (logout === 'logout') {\n        return 'Ви успішно здійснили вихід з профілю! Успіхів!';\n    } else if (logout === 'testInProcess') {\n        return 'Ви дійсно хочете покинути профіль? Тест триває! Якщо ви вийдете, ваша спроба та поточні відповіді будуть зараховані!';\n    } else if (logout === 'checkError') {\n        return 'Сталася помилка! Не вдалося перевірити Ваш тест та визначити результат';\n    } else if (logout === 'result') {\n        return `Ви покинули профіль! Ваш результат тесту: Правильних відповідей: ${result.number_of_true_answers}; Результат: ${result.full_mark}`;\n    }\n}\n\n// TestPlayer Server Messages //\ntype TestPlayer = 'get' | 'save' | 'reset';\n\nexport function testPlayerServerMessages(testPlayer: TestPlayer): string {\n    if (testPlayer === 'get') {\n        return 'Сталася помилка при отриманні даних із сесії. Невдається продовжити операцію! Спробуйте знову';\n    } else if (testPlayer === 'reset') {\n        return 'Сталася помилка при видаленні сесії. Невдається продовжити операцію! Спробуйте знову';\n    } else if (testPlayer === 'save') {\n        return 'Сталася помилка при збереженні даних у сесії. Невдається продовжити операцію! Спробуйте знову';\n    }\n}\n\n// SnackBar Messages //\ntype SnackBar = 'cancel' | 'close';\n\nexport function snackBarMessages(snackBar: SnackBar): string {\n    if (snackBar === 'cancel') {\n        return 'Скасовано';\n    }\n}\n\n// Theme Messages //\nexport function themeChangeMessage(theme: string): string {\n    if (theme === 'default-theme') {\n        return 'Тему додатку змінено на світлу';\n    } else {\n        return 'Тему додатку змінено на темну';\n    }\n}\n\n// Profile Page Messages //\nexport const testsTableColumns = [\n    'Предмет',\n    'Тест',\n    'Початок',\n    'Кінець',\n    'Кількість завдань',\n    'Тривалість тесту',\n    'Кількість спроб',\n    'Почати тестування',\n];\ntype Profile =\n    | 'subjects'\n    | 'student'\n    | 'emptySubjects'\n    | 'isMatch'\n    | 'welcome'\n    | 'getSessionError'\n    | 'continueTest'\n    | 'snackbarCancel';\nexport function profileMessages(\n    profile: Profile,\n    response?: StudentProfile,\n    testName?: string,\n    subjectName?: string\n): string {\n    if (profile === 'student') {\n        return `Сталася помилка. Не вдалося отримати дані Ваші дані. Спробуйте знову`;\n    } else if (profile === 'subjects') {\n        return `Сталася помилка. Не вдалося отримати предмети Вашої групи. Спробуйте знову`;\n    } else if (profile === 'emptySubjects') {\n        return 'Предмети у групи відсутні';\n    } else if (profile === 'isMatch') {\n        return 'Неможливо здати даний тест! У сесії відсутні дані про тест, який Ви хочете здавати';\n    } else if (profile === 'welcome') {\n        return `Ласкаво просимо ${response.student_surname} ${response.student_name} ${response.student_fname}`;\n    } else if (profile === 'getSessionError') {\n        return 'Сталася помилка при перевірці незакінчених тестів Не вдалося отримати дані з сесії для перевірки здачі тесту! Спробуйте знову';\n    } else if (profile === 'continueTest') {\n        return `У даний момент у Вас є незакінчений тест ${testName} з предмету ${subjectName}! Бажаєте продовжити здачу тесту? У випадку відмови, тест буде тривати і щойно закінчиться час - тест буде закінчено і отримано результат`;\n    } else if (profile === 'snackbarCancel') {\n        return `Тест ${testName} триває. Ви завжди можете повернутися до здачі`;\n    }\n}\n\n// Schedule Table Messages //\ntype Schedule =\n    | 'isTests'\n    | 'noTests'\n    | 'noTestData'\n    | 'activeTestsError'\n    | 'subjectTestsError'\n    | 'confirmStartTest';\n\nexport function scheduleMessages(\n    schedule: Schedule,\n    subjectName?: string,\n    test?: TestDetails\n): string {\n    if (schedule === 'isTests') {\n        return 'Тести завантажено';\n    } else if (schedule === 'noTests') {\n        return 'Тести відсутні';\n    } else if (schedule === 'noTestData') {\n        return 'Дані відсутні';\n    } else if (schedule === 'activeTestsError') {\n        return 'Сталася помилка під час складання списку активних тестів. Спробуйте знову';\n    } else if (schedule === 'subjectTestsError') {\n        return `Сталася помилка. Не вдалося отримати тести з предмету ${subjectName}. Спробуйте знову`;\n    } else if (schedule === 'confirmStartTest') {\n        return `Розпочати тест ${test.test_name} з предмету ${test.subjectname}?\n                    Тривалість тесту ${test.time_for_test} та ${test.attempts} спроби на здачу ${test.tasks} завдань!`;\n    }\n}\n\n// Check Date For Pass Test Messages //\ntype CheckTestDate =\n    | 'noAvailable'\n    | 'willBeAvailableLater'\n    | 'notData'\n    | 'willBeAvailableToday';\n\nexport function checkTestDateMessages(\n    check: CheckTestDate,\n    test: TestDate\n): string {\n    if (check === 'noAvailable') {\n        return `Ви не можете здавати цей екзамен! Екзамен більше не доступний! Кінцева дата здачі була ${test.end_date}`;\n    } else if (check === 'willBeAvailableLater') {\n        return `Ви не можете здавати цей екзамен! Екзамен буде доступний ${test.start_date} о ${test.start_time}`;\n    } else if (check === 'notData') {\n        return `Екзамен не доступний! Немає потрібних даних`;\n    } else if (check === 'willBeAvailableToday') {\n        return `Ви не можете здавати цей екзамен! Екзамен буде доступний сьогодні о ${test.start_time}`;\n    }\n}\n\n// Start Test Messages //\ntype StartTestPlayer =\n    | 'startTest'\n    | 'getLogError'\n    | 'saveSessionError'\n    | 'getSessionError'\n    | 'scheduleError'\n    | 'numberOfQuestions'\n    | 'allAttempts'\n    | 'makingTest'\n    | 'onlyForYou'\n    | 'paramsNotFound'\n    | 'madeRecently'\n    | 'default';\n\nexport function startTestPlayerMessages(\n    startTest: StartTestPlayer,\n    error?: boolean\n): string {\n    if (startTest === 'startTest') {\n        return 'Тест розпочато! Час пішов!';\n    } else if (startTest === 'saveSessionError') {\n        return 'Сталася помилка при старті тесту! Не вдалося зберегти дані у сесії для здачі тесту! Спробуйте знову';\n    } else if (startTest === 'getSessionError') {\n        return 'Сталася помилка при спробі продовжити тест! Не вдалося отримати дані з сесії для здачі тесту! Спробуйте знову';\n    } else if (startTest === 'scheduleError' && error) {\n        return 'You cannot make the test due to your schedule';\n    } else if (startTest === 'scheduleError' && !error) {\n        return 'Сталася помилка! Ви не можете пройти тест за своїм розкладом';\n    } else if (startTest === 'numberOfQuestions' && error) {\n        return 'Error: The number of needed questions for the quiz is not suitable due to test details';\n    } else if (startTest === 'numberOfQuestions' && !error) {\n        return 'Сталася помилка! Кількість необхідних питань для вікторини не підходить через деталі тесту';\n    } else if (startTest === 'allAttempts' && error) {\n        return 'You cannot make the test due to used all attempts';\n    } else if (startTest === 'allAttempts' && !error) {\n        return 'Сталася помилка! Ви використали всі спроби для здачі даного тесту';\n    } else if (startTest === 'makingTest' && error) {\n        return 'User is making test at current moment';\n    } else if (startTest === 'makingTest' && !error) {\n        return 'Сталася помилка! Користувач здає тест у даний момент';\n    } else if (startTest === 'onlyForYou' && error) {\n        return 'You can start tests which are only for you!!!';\n    } else if (startTest === 'onlyForYou' && !error) {\n        return 'Сталася помилка! Ви можете розпочати тести, які призначені лише Вам';\n    } else if (startTest === 'paramsNotFound' && error) {\n        return 'Test detail parameters not found for requested test';\n    } else if (startTest === 'paramsNotFound' && !error) {\n        return 'Сталася помилка! Не знайдено детальних параметрів для запитуваного тесту';\n    } else if (startTest === 'madeRecently' && error) {\n        return 'Error. User made test recently';\n    } else if (startTest === 'madeRecently' && !error) {\n        return 'Сталася помилка! Користувач здав даний тест недавно. Зачекайте деякий час ( до 1хв )';\n    } else if (startTest === 'default') {\n        return 'Сталася помилка! Невідома помилка, тест розпочати не вдається! Спробуйте знову';\n    }\n}\n\n// Test Player Messages //\ntype TestPlayerClient =\n    | 'withoutMakingQuiz'\n    | 'enoughNumber'\n    | 'default'\n    | 'finish'\n    | 'sureFinish'\n    | 'checkError'\n    | 'emptySlot';\nexport function testPlayerMessages(\n    testPlayer: TestPlayerClient,\n    error?: boolean,\n    testName?: string,\n    gone?: boolean\n): string {\n    if (testPlayer === 'default') {\n        return 'Сталася помилка! Невідома помилка при отриманні запитань до тесту, тест розпочати не вдається! Спробуйте знову';\n    } else if (testPlayer === 'withoutMakingQuiz' && error) {\n        return 'You cannot call this method without making an quiz';\n    } else if (testPlayer === 'withoutMakingQuiz' && !error) {\n        return 'Сталася помилка! Неможливо запустити даний текст';\n    } else if (testPlayer === 'enoughNumber' && error) {\n        return 'Not enough number of questions for quiz';\n    } else if (testPlayer === 'enoughNumber' && !error) {\n        return 'Сталася помилка! Недостатня кількість питань для тесту! Неможливо продовжити! Спробуйте знову';\n    } else if (testPlayer === 'sureFinish') {\n        return `Ви впевнені, що хочете завершити ${testName}?`;\n    } else if (testPlayer === 'finish' && gone) {\n        return 'Час здачі тесту вийшов! Ваш результат!';\n    } else if (testPlayer === 'finish' && !gone) {\n        return 'Ви закінчили тест! Ваш результат!';\n    } else if (testPlayer === 'checkError') {\n        return 'Сталася помилка! Не вдалося перевірити Ваш тест та визначити результат';\n    } else if (testPlayer === 'emptySlot') {\n        return 'Сталася помилка! Тест не було розпочато або тест уже було закінчено! Неможливо здати тест або повернутися до його здачі';\n    }\n}\n\n// Timer Messages //\ntype Timer = 'timerError' | 'endError' | 'saveError' | 'syncError';\n\nexport function timerMessages(timer: Timer): string {\n    if (timer === 'syncError') {\n        return 'Сталася помилка! Не вдалося синхронізувати час! Неможливо продовжити! Спробуйте знову';\n    } else if (timer === 'endError') {\n        return 'Сталася помилка! Не вдалося отримати час закінчення тесту! Неможливо продовжити! Спробуйте знову';\n    } else if (timer === 'saveError') {\n        return 'Сталася помилка! Не вдалося зберегти час тесту! Неможливо продовжити! Спробуйте знову';\n    } else if (timer === 'timerError') {\n        return 'Сталася помилка! Проблеми таймера! Спробуйте знову';\n    }\n}\n"],"sourceRoot":"webpack:///"}