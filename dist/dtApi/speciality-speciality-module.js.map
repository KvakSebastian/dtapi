{"version":3,"sources":["./src/app/modules/admin/speciality/dialog.service.ts","./src/app/modules/admin/speciality/speciality.module.ts","./src/app/modules/admin/speciality/list-table/list-table.component.ts","./src/app/modules/admin/speciality/list-table/list-table.component.html","./src/app/modules/admin/speciality/confirm-dialog/confirm-dialog.component.ts","./src/app/modules/admin/speciality/confirm-dialog/confirm-dialog.component.html","./src/app/modules/admin/speciality/modal-form/modal-form.component.ts","./src/app/modules/admin/speciality/modal-form/modal-form.component.html"],"names":[],"mappings":"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","file":"speciality-speciality-module.js","sourcesContent":["import { Injectable } from '@angular/core';\nimport { MatDialog, MatDialogRef } from '@angular/material/dialog';\n\nimport { ConfirmDialogComponent } from './confirm-dialog/confirm-dialog.component';\nimport { ModalFormComponent } from './modal-form/modal-form.component';\n\n@Injectable({\n    providedIn: 'root',\n})\nexport class DialogService {\n    dialogRef: MatDialogRef<ConfirmDialogComponent>;\n    modalDialogRef: MatDialogRef<ModalFormComponent>;\n    constructor(private dialog: MatDialog) {}\n\n    openConfirmDialog(data): any {\n        return (this.dialogRef = this.dialog.open(ConfirmDialogComponent, {\n            data,\n            disableClose: true,\n        }));\n    }\n\n    createModal(data?): any {\n        return (this.modalDialogRef = this.dialog.open(ModalFormComponent, {\n            data: data ? data : '',\n            autoFocus: true,\n            disableClose: true,\n        }));\n    }\n}\n","import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { RouterModule, Routes } from '@angular/router';\n\nimport { ConfirmDialogComponent } from './confirm-dialog/confirm-dialog.component';\nimport { ModalFormComponent } from './modal-form/modal-form.component';\nimport { ListTableComponent } from './list-table/list-table.component';\nimport { SharedModule } from '../../../shared/modules/shared.module';\n\nconst routes: Routes = [{ path: '', component: ListTableComponent }];\n\n@NgModule({\n    declarations: [\n        ListTableComponent,\n        ModalFormComponent,\n        ConfirmDialogComponent,\n    ],\n    exports: [ListTableComponent, ModalFormComponent],\n    imports: [CommonModule, SharedModule, RouterModule.forChild(routes)],\n})\nexport class SpecialityModule {}\n","import { AfterViewInit, Component, OnInit, ViewChild } from '@angular/core';\nimport { MatPaginator } from '@angular/material/paginator';\nimport { MatDialogRef } from '@angular/material/dialog';\nimport { MatTableDataSource } from '@angular/material/table';\n\nimport { ApiService } from '../api.service';\nimport { ModalFormComponent } from '../modal-form/modal-form.component';\nimport { ConfirmDialogComponent } from '../confirm-dialog/confirm-dialog.component';\nimport { DialogService } from '../dialog.service';\n\nexport interface ListTableItem {\n    speciality_id?: number;\n    speciality_code: number;\n    speciality_name: string;\n}\n\n@Component({\n    selector: 'app-list-table',\n    templateUrl: './list-table.component.html',\n    styleUrls: ['./list-table.component.scss'],\n})\nexport class ListTableComponent implements OnInit, AfterViewInit {\n    dataSource = new MatTableDataSource<ListTableItem>();\n    displayedColumns: string[] = ['id', 'name', 'code', 'buttons'];\n    fileNameDialogRef: MatDialogRef<ModalFormComponent>;\n    confirmDialogRef: MatDialogRef<ConfirmDialogComponent>;\n\n    @ViewChild(MatPaginator, { static: true }) paginator: MatPaginator;\n\n    constructor(\n        private apiService: ApiService,\n        private dialogService: DialogService\n    ) {}\n    applyFilter(event: Event): void {\n        const filterValue = (event.target as HTMLInputElement).value;\n        this.dataSource.filter = filterValue.trim().toLowerCase();\n\n        if (this.dataSource.paginator) {\n            this.dataSource.paginator.firstPage();\n        }\n    }\n    ngOnInit(): void {\n        this.getSpeciality();\n    }\n    ngAfterViewInit(): void {\n        this.dataSource.paginator = this.paginator;\n    }\n\n    getSpeciality(): void {\n        this.apiService.getEntity('Speciality').subscribe(\n            (response: ListTableItem[]) => (this.dataSource.data = response),\n            (error) => {\n                this.apiService.snackBarOpen();\n            }\n        );\n    }\n\n    openModal(data?: ListTableItem): void {\n        this.dialogService\n            .createModal(data ? data : '')\n            .afterClosed()\n            .subscribe(\n                (res?) => {\n                    if (!res) return;\n                    const result: ListTableItem = res.res[0];\n                    switch (res.str) {\n                        case 'upd':\n                            this.updateSpecialityView(data, result);\n                            break;\n                        case 'added':\n                            this.addSpecialityView(result);\n                            break;\n                    }\n                },\n                (error) => {\n                    this.apiService.snackBarOpen();\n                }\n            );\n    }\n\n    addSpecialityView(result: ListTableItem) {\n        this.dataSource.data = [...this.dataSource.data, result];\n        this.dataSource.paginator.lastPage();\n    }\n    updateSpecialityView(data: ListTableItem, result: ListTableItem) {\n        this.dataSource.data = this.dataSource.data.map((i) =>\n            i.speciality_id === data.speciality_id ? result : i\n        );\n    }\n    editSpeciality(elem: ListTableItem): void {\n        this.openModal(elem);\n    }\n\n    deleteSpeciality(data: ListTableItem): void {\n        this.dialogService\n            .openConfirmDialog(data)\n            .afterClosed()\n            .subscribe(\n                (res) => {\n                    if (res === 'ok') {\n                        this.dataSource.data = this.dataSource.data.filter(\n                            (speciality) =>\n                                speciality.speciality_id !== data.speciality_id\n                        );\n                    }\n                },\n                (error) => {\n                    this.apiService.snackBarOpen();\n                }\n            );\n    }\n}\n","<div class=\"speciality-head\">\n    <h1 class=\"mat-h1 entity-title\">\n        <mat-icon class=\"speciality-title-icon\"> dns </mat-icon>Спеціальності\n    </h1>\n    <button mat-raised-button color=\"primary\" (click)=\"openModal()\">\n        <mat-icon>add_circle</mat-icon> Додати Спеціальність\n    </button>\n</div>\n<mat-form-field>\n    <mat-label class=\"entity-search-label\"\n        ><mat-icon class=\"entity-search-icon\">person_search</mat-icon>\n        Пошук</mat-label\n    >\n    <input\n        matInput\n        (keyup)=\"applyFilter($event)\"\n        placeholder=\"Введіть характеристику\"\n        #input\n    />\n</mat-form-field>\n<div class=\"mat-elevation-z8\">\n    <table mat-table [dataSource]=\"dataSource\">\n        <ng-container matColumnDef=\"id\">\n            <th mat-header-cell *matHeaderCellDef>ID</th>\n            <td mat-cell *matCellDef=\"let element\">\n                {{ element.speciality_id }}\n            </td>\n        </ng-container>\n        <ng-container matColumnDef=\"name\">\n            <th mat-header-cell *matHeaderCellDef>Назва</th>\n            <td mat-cell *matCellDef=\"let element\">\n                {{ element.speciality_name }}\n            </td>\n        </ng-container>\n        <ng-container matColumnDef=\"code\">\n            <th mat-header-cell *matHeaderCellDef>Код</th>\n            <td mat-cell *matCellDef=\"let element\">\n                {{ element.speciality_code }}\n            </td>\n        </ng-container>\n        <ng-container matColumnDef=\"buttons\">\n            <th mat-header-cell *matHeaderCellDef>Дія</th>\n            <td\n                mat-cell\n                *matCellDef=\"let element\"\n                class=\"entity-operation-buttons\"\n            >\n                <button\n                    class=\"entity-operation-button\"\n                    mat-flat-button\n                    color=\"primary\"\n                    (click)=\"editSpeciality(element)\"\n                    matTooltip=\"Редагувати спеціальність\"\n                >\n                    <mat-icon class=\"entity-operation-icon\">edit</mat-icon>\n                </button>\n                <button\n                    class=\"entity-operation-button\"\n                    mat-flat-button\n                    color=\"primary\"\n                    matTooltip=\"Видалити спеціальність\"\n                    (click)=\"deleteSpeciality(element)\"\n                >\n                    <mat-icon class=\"entity-operation-icon\">delete</mat-icon>\n                </button>\n            </td>\n        </ng-container>\n\n        <tr mat-header-row *matHeaderRowDef=\"displayedColumns\"></tr>\n        <tr mat-row *matRowDef=\"let row; columns: displayedColumns\"></tr>\n        <tr class=\"mat-row\" *matNoDataRow>\n            <td class=\"mat-cell\" colspan=\"4\">\n                Нічого не знайдено за заданим фільтром \"{{ input.value }}\"\n            </td>\n        </tr>\n    </table>\n    <mat-paginator\n        class=\"paginator\"\n        [pageSizeOptions]=\"[10, 15, 20, 25]\"\n        showFirstLastButtons\n    ></mat-paginator>\n</div>\n","import { Component, Inject, OnInit } from '@angular/core';\nimport { MatDialogRef, MAT_DIALOG_DATA } from '@angular/material/dialog';\n\nimport { ApiService } from '../api.service';\n\n@Component({\n    selector: 'app-confirm-dialog',\n    templateUrl: './confirm-dialog.component.html',\n    styleUrls: ['./confirm-dialog.component.scss'],\n})\nexport class ConfirmDialogComponent {\n    constructor(\n        private dialogRef: MatDialogRef<ConfirmDialogComponent>,\n        private apiService: ApiService,\n        @Inject(MAT_DIALOG_DATA) public data?\n    ) {}\n\n    agreeBtn(): void {\n        this.apiService\n            .delEntity('Speciality', this.data.speciality_id)\n            .subscribe(\n                (res) => {\n                    if (res.response === 'ok')\n                        this.dialogRef.close(res.response);\n                },\n                (error) => {\n                    this.apiService.snackBarOpen();\n                }\n            );\n    }\n}\n","<div class=\"confirm-dialog\">\n    <h1 mat-dialog-title>Видалення</h1>\n    <div mat-dialog-content>\n        Ви впевнені, що хочете видалити спеціальність: <br />\n        \"{{ data.speciality_name }}\"?\n    </div>\n    <div mat-dialog-actions class=\"confirm-button\">\n        <button mat-button mat-dialog-close class=\"decline\">Відмінити</button>\n        <button mat-button class=\"agree\" (click)=\"agreeBtn()\">\n            Підтвердити\n        </button>\n    </div>\n</div>\n","import { Component, Inject, OnInit } from '@angular/core';\nimport { FormBuilder, FormGroup, Validators } from '@angular/forms';\nimport { MatDialogRef, MAT_DIALOG_DATA } from '@angular/material/dialog';\n\nimport { ApiService } from '../api.service';\nimport { ListTableItem } from '../list-table/list-table.component';\n\n@Component({\n    selector: 'app-modal-form',\n    templateUrl: './modal-form.component.html',\n    styleUrls: ['./modal-form.component.scss'],\n})\nexport class ModalFormComponent implements OnInit {\n    constructor(\n        private formBuilder: FormBuilder,\n        private apiService: ApiService,\n        private dialogRef: MatDialogRef<ModalFormComponent>,\n        @Inject(MAT_DIALOG_DATA) public data?\n    ) {}\n\n    form: FormGroup;\n\n    ngOnInit() {\n        this.form = this.formBuilder.group({\n            speciality_name: [\n                this.data ? this.data.speciality_name : '',\n                [Validators.required],\n            ],\n            speciality_code: [\n                this.data ? this.data.speciality_code : '',\n                [\n                    Validators.required,\n                    Validators.maxLength(5),\n                    Validators.pattern('^[0-9]*$'),\n                ],\n            ],\n        });\n    }\n    editSpeciality(str: string): void {\n        switch (str) {\n            case 'update':\n                this.updateSpeciality();\n                break;\n            case 'add':\n                this.addSpeciality();\n                break;\n        }\n    }\n    updateSpeciality() {\n        this.apiService\n            .updateEntity(\n                'Speciality',\n                this.data.speciality_id,\n                this.form.value\n            )\n            .subscribe(\n                (res: ListTableItem) => {\n                    const result = { res, str: 'upd' };\n                    this.dialogRef.close(result);\n                },\n                (error) => {\n                    this.apiService.snackBarOpen();\n                }\n            );\n    }\n    addSpeciality() {\n        this.apiService.addEntity('Speciality', this.form.value).subscribe(\n            (res) => {\n                const result = { res, str: 'added' };\n                this.dialogRef.close(result);\n            },\n            (error) => {\n                this.apiService.snackBarOpen();\n            }\n        );\n    }\n    onCancel(): void {\n        this.dialogRef.close();\n    }\n}\n","<form\n    class=\"example-form\"\n    [formGroup]=\"form\"\n    (ngSubmit)=\"editSpeciality(data ? 'update' : 'add')\"\n>\n    <h1>{{ data ? 'Редагувати спеціальність' : 'Додати спеціальність' }}</h1>\n    <mat-form-field class=\"example-full-width\">\n        <mat-label>Name</mat-label>\n        <input matInput placeholder=\"Name\" formControlName=\"speciality_name\" />\n        <div\n            class=\"validation\"\n            *ngIf=\"\n                form.get('speciality_name').invalid &&\n                form.get('speciality_name').touched\n            \"\n        >\n            <small>Поле не може бути пустим</small>\n        </div> </mat-form-field\n    ><br />\n    <mat-form-field class=\"example-full-width\">\n        <mat-label>Code</mat-label>\n        <input matInput placeholder=\"2134\" formControlName=\"speciality_code\" />\n        <div\n            class=\"validation\"\n            *ngIf=\"\n                form.get('speciality_code').invalid &&\n                form.get('speciality_code').touched\n            \"\n        >\n            <small *ngIf=\"form.get('speciality_code').errors.required\"\n                >Поле не може бути пустим</small\n            >\n            <small *ngIf=\"form.get('speciality_code').errors.maxlength\"\n                >Поле повинно містити не більше\n                {{\n                    form.get('speciality_code').errors.maxlength.requiredLength\n                }}\n                чисел , у вас:\n                {{\n                    form.get('speciality_code').errors.maxlength.actualLength\n                }}</small\n            >\n\n            <small *ngIf=\"form.get('speciality_code').errors.pattern\">\n                Поле може містити тільки числа\n            </small>\n        </div> </mat-form-field\n    ><br />\n    <div class=\"confirm-dialog\">\n        <button\n            mat-raised-button\n            type=\"button\"\n            (click)=\"onCancel()\"\n            class=\"decline\"\n        >\n            Відмінити\n        </button>\n        <button\n            mat-raised-button\n            class=\"agree\"\n            type=\"submit\"\n            [disabled]=\"form.invalid\"\n        >\n            {{ data ? 'Редагувати' : 'Додати' }}\n        </button>\n    </div>\n</form>\n"],"sourceRoot":"webpack:///"}