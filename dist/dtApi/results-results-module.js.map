{"version":3,"sources":["./src/app/modules/admin/results/results.service.ts","./src/app/modules/admin/results/results.component.ts","./src/app/modules/admin/results/results.component.html","./src/app/modules/admin/results/details-by-question/details-by-question.component.ts","./src/app/modules/admin/results/details-by-question/details-by-question.component.html","./src/app/modules/admin/results/detail-dialog/detail-dialog.component.ts","./src/app/modules/admin/results/detail-dialog/detail-dialog.component.html","./src/app/modules/admin/results/results.module.ts"],"names":[],"mappings":"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","file":"results-results-module.js","sourcesContent":["import { HttpClient } from '@angular/common/http';\nimport { Injectable } from '@angular/core';\nimport { MatSnackBar } from '@angular/material/snack-bar';\nimport { Observable, of } from 'rxjs';\n\nimport { environment } from 'src/environments/environment';\n\nconst A_THOUSAND = 1000;\nconst A_MINUTE_TO_SEC = 60;\nconst DAY_BY_HOURS = 24;\n\n@Injectable({\n    providedIn: 'root',\n})\nexport class ResultsService {\n    constructor(private http: HttpClient, private snackBar: MatSnackBar) {}\n\n    getGroupList(): Observable<any> {\n        return this.http.get(`${environment.BASEURL}group/getRecords`);\n    }\n    getTestsList(): Observable<any> {\n        return this.http.get(`${environment.BASEURL}test/getRecords`);\n    }\n\n    snackBarOpen(): any {\n        return this.snackBar.open('Щось пішло не так:(', '', {\n            duration: 1500,\n        });\n    }\n    getResultTestIdsByGroup(group_id): Observable<any> {\n        return this.http.get(\n            `${environment.BASEURL}Result/getResultTestIdsByGroup/${group_id}`\n        );\n    }\n    getStudentInfo(id): Observable<any> {\n        return this.http.get(\n            `${environment.BASEURL}Student/getStudentsByGroup/${id}`\n        );\n    }\n    getRecordsByTestDate(testId, groupId): Observable<any> {\n        return this.http.get(\n            `${environment.BASEURL}Result/getRecordsByTestGroupDate/${testId}/${groupId}`\n        );\n    }\n    getDuration(session_date, start_time, end_time) {\n        const startTime = Date.parse(`${session_date} ${start_time}`);\n        const endTime = Date.parse(`${session_date} ${end_time}`);\n        const duration = endTime - startTime;\n        return this.msToTime(duration);\n    }\n    private msToTime(duration: number) {\n        let seconds: number | string = Math.floor(\n                (duration / A_THOUSAND) % A_MINUTE_TO_SEC\n            ),\n            minutes: number | string = Math.floor(\n                (duration / (A_THOUSAND * A_MINUTE_TO_SEC)) % A_MINUTE_TO_SEC\n            ),\n            hours: number | string = Math.floor(\n                (duration / (A_THOUSAND * A_MINUTE_TO_SEC * A_MINUTE_TO_SEC)) %\n                    DAY_BY_HOURS\n            );\n\n        hours = hours < 10 ? '0' + hours : hours;\n        minutes = minutes < 10 ? '0' + minutes : minutes;\n        seconds = seconds < 10 ? '0' + seconds : seconds;\n\n        return `${hours}:${minutes}:${seconds}`;\n    }\n\n    getByEntityManager(\n        entity: string,\n        idsList: Array<number>\n    ): Observable<any> {\n        const data = {\n            entity: entity,\n            ids: idsList,\n        };\n        return this.http.post(\n            `${environment.BASEURL}EntityManager/getEntityValues`,\n            data\n        );\n    }\n    getAnswersByQuestions(id): Observable<any> {\n        return this.http.get(\n            `${environment.BASEURL}answer/getAnswersByQuestion/${id}`\n        );\n    }\n}\n","import { Component, OnInit } from '@angular/core';\nimport { FormBuilder, FormGroup, Validators } from '@angular/forms';\nimport { MatDialog, MatDialogRef } from '@angular/material/dialog';\nimport { MatTableDataSource } from '@angular/material/table';\nimport { forkJoin } from 'rxjs';\nimport { DetailDialogComponent } from './detail-dialog/detail-dialog.component';\nimport { ResultsService } from './results.service';\n\n@Component({\n    selector: 'app-results',\n    templateUrl: './results.component.html',\n    styleUrls: ['./results.component.scss'],\n})\nexport class ResultsComponent implements OnInit {\n    constructor(\n        private resultService: ResultsService,\n        private formBuilder: FormBuilder,\n        private dialog: MatDialog\n    ) {}\n    displayedColumns: string[] = [\n        'id',\n        'fullName',\n        'rating',\n        'data',\n        'startTime',\n        'duration',\n        'statistic',\n    ];\n    groupId;\n    testId;\n    groupList;\n    testsListByGroup;\n    testsList = null;\n    studentsResultsByGroup;\n    testResults;\n    dataSource = new MatTableDataSource();\n    form: FormGroup;\n\n    ngOnInit(): void {\n        this.getGroupAndTestInfo();\n        this.formInitialize();\n    }\n    private getGroupAndTestInfo() {\n        this.resultService.getGroupList().subscribe({\n            next: (res) => {\n                this.groupList = res;\n            },\n        });\n\n        this.resultService.getTestsList().subscribe({\n            next: (res) => {\n                this.testsListByGroup = res;\n            },\n        });\n    }\n    onChange($event) {\n        this.resultService.getResultTestIdsByGroup($event.value).subscribe({\n            next: (res: any) => {\n                this.filteredTestOptions(res, $event);\n            },\n        });\n    }\n    onSubmit() {\n        if (this.form.get('testName').value) {\n            forkJoin([\n                this.resultService.getStudentInfo(this.groupId),\n                this.resultService.getRecordsByTestDate(\n                    this.testId,\n                    this.groupId\n                ),\n            ]).subscribe({\n                next: ([groupRes, testRes]) => {\n                    this.getTestInfoByGroup(groupRes, testRes);\n                },\n            });\n        }\n    }\n\n    onChangeTest($event) {\n        if ($event.value) {\n            this.testId = $event.value;\n        }\n    }\n    private filteredTestOptions(res, $event) {\n        if (res.response) {\n            this.testsList = null;\n            this.form.get('testName').reset();\n            this.resultService.snackBarOpen();\n        } else {\n            this.form.get('testName').reset();\n            this.groupId = $event.value;\n            this.testsList = this.testsListByGroup.filter((i) =>\n                res.some((j) => j.test_id === i.test_id)\n            );\n        }\n    }\n    private getTestInfoByGroup(groupRes, testRes) {\n        this.testResults = testRes;\n        this.studentsResultsByGroup = groupRes;\n        this.dataSource.data = this.testResults.map((item) => {\n            const duration = this.resultService.getDuration(\n                item.session_date,\n                item.start_time,\n                item.end_time\n            );\n\n            const studentInfo = this.studentsResultsByGroup.filter(\n                (data) => data.user_id === item.student_id\n            );\n            return Object.assign({}, item, ...studentInfo, {\n                duration,\n            });\n        });\n    }\n\n    private formInitialize() {\n        this.form = this.formBuilder.group({\n            testName: ['', [Validators.required]],\n            groupName: ['', [Validators.required]],\n        });\n    }\n\n    onClick(data) {\n        this.dialog.open(DetailDialogComponent, {\n            data,\n            panelClass: 'custom-dialog-container',\n            disableClose: true,\n            maxHeight: '90vh',\n        });\n    }\n}\n","<form [formGroup]=\"form\" (submit)=\"onSubmit()\">\n    <h1 class=\"mat-h1 entity-title\">\n        <mat-icon class=\"results-title-icon\"> insights </mat-icon>Результати\n    </h1>\n\n    <mat-form-field appearance=\"fill\">\n        <mat-label>Назва групи</mat-label>\n        <mat-select\n            formControlName=\"groupName\"\n            name=\"groupList\"\n            (selectionChange)=\"onChange($event)\"\n        >\n            <mat-option\n                *ngFor=\"let group of groupList\"\n                [value]=\"group.group_id\"\n            >\n                {{ group.group_name }}\n            </mat-option>\n        </mat-select>\n    </mat-form-field>\n    <mat-form-field appearance=\"fill\">\n        <mat-label>Назва тесту</mat-label>\n        <mat-select\n            formControlName=\"testName\"\n            name=\"testsList\"\n            (selectionChange)=\"onChangeTest($event)\"\n        >\n            <mat-option *ngFor=\"let test of testsList\" [value]=\"test.test_id\">\n                {{ test.test_name }}\n            </mat-option>\n        </mat-select>\n    </mat-form-field>\n    <button\n        mat-raised-button\n        class=\"getDataBtn\"\n        color=\"primary\"\n        type=\"submit\"\n        [disabled]=\"!form.valid\"\n    >\n        Отримати дані\n    </button>\n</form>\n<table mat-table [dataSource]=\"dataSource\" *ngIf=\"dataSource.data.length\">\n    <ng-container matColumnDef=\"id\">\n        <th mat-header-cell *matHeaderCellDef>№</th>\n        <td mat-cell *matCellDef=\"let element\">\n            {{ dataSource.data.indexOf(element) + 1 }}\n        </td>\n    </ng-container>\n\n    <ng-container matColumnDef=\"fullName\">\n        <th mat-header-cell *matHeaderCellDef>ПІБ Студента</th>\n        <td mat-cell *matCellDef=\"let element\">\n            {{\n                element.student_name +\n                    ' ' +\n                    element.student_fname +\n                    ' ' +\n                    element.student_surname\n            }}\n        </td>\n    </ng-container>\n    <ng-container matColumnDef=\"rating\">\n        <th mat-header-cell *matHeaderCellDef>Оцінка</th>\n        <td mat-cell *matCellDef=\"let element\">\n            {{ element.result }}\n        </td>\n    </ng-container>\n    <ng-container matColumnDef=\"data\">\n        <th mat-header-cell *matHeaderCellDef>Дата</th>\n        <td mat-cell *matCellDef=\"let element\">\n            {{ element.session_date }}\n        </td>\n    </ng-container>\n    <ng-container matColumnDef=\"startTime\">\n        <th mat-header-cell *matHeaderCellDef>Початок</th>\n        <td mat-cell *matCellDef=\"let element\">\n            {{ element.start_time }}\n        </td>\n    </ng-container>\n    <ng-container matColumnDef=\"duration\">\n        <th mat-header-cell *matHeaderCellDef>Тривалість</th>\n        <td mat-cell *matCellDef=\"let element\">\n            {{ element.duration }}\n        </td>\n    </ng-container>\n    <ng-container matColumnDef=\"statistic\">\n        <th mat-header-cell *matHeaderCellDef>Детальніше</th>\n        <div class=\"btnStat\">\n            <td mat-cell *matCellDef=\"let item\">\n                <a\n                    class=\"operation-button\"\n                    (click)=\"onClick(item)\"\n                    alt=\"Деталі тестування\"\n                >\n                    <mat-icon class=\"detail-btn\">view_headline</mat-icon>\n                </a>\n            </td>\n        </div>\n    </ng-container>\n\n    <tr mat-header-row *matHeaderRowDef=\"displayedColumns\"></tr>\n    <tr mat-row *matRowDef=\"let row; columns: displayedColumns\"></tr>\n</table>\n","import { Component, Inject, OnInit } from '@angular/core';\nimport { MatDialog, MAT_DIALOG_DATA } from '@angular/material/dialog';\nimport { ResultsService } from '../results.service';\n\n@Component({\n    selector: 'app-details-by-question',\n    templateUrl: './details-by-question.component.html',\n    styleUrls: ['./details-by-question.component.scss'],\n})\nexport class DetailsByQuestionComponent implements OnInit {\n    constructor(\n        private resultApi: ResultsService,\n        @Inject(MAT_DIALOG_DATA) public data?\n    ) {}\n    dataSource;\n    ngOnInit(): void {\n        this.resultApi\n            .getAnswersByQuestions(this.data.question_id)\n            .subscribe((res) => {\n                this.dataSource = res;\n            });\n    }\n    getAnswerText() {\n        const more = this.dataSource.filter((item) => {\n            return this.data.answer_ids.some((i) => i == item.answer_id);\n        });\n        if (!more.length) {\n            if (!this.data.answer_ids[0]) {\n                return 'Користувач не дав відповіді';\n            }\n            return this.data.answer_ids;\n        }\n        const toText = more.map((i) => i.answer_text).join(', ');\n\n        return toText;\n    }\n}\n","<div class=\"contenter\">\n    <mat-card class=\"ask-header\">\n        <mat-card-title>Запитання</mat-card-title>\n        <mat-card-content>{{ data.question_text }}</mat-card-content>\n    </mat-card>\n    <mat-card class=\"ask-header\">\n        <mat-card-title>Ваша відповідь</mat-card-title>\n        <mat-card-content *ngIf=\"dataSource\">{{\n            getAnswerText()\n        }}</mat-card-content>\n    </mat-card>\n    <mat-card class=\"ask-header\">\n        <mat-card-title class=\"center-title\">варіанти відповіді</mat-card-title>\n        <div class=\"content\" fxLayout=\"row wrap\" fxLayoutGap=\"5px grid\">\n            <div\n                fxFlex=\"33%\"\n                fxFlex.xs=\"100%\"\n                fxFlex.sm=\"50%\"\n                *ngFor=\"let elem of dataSource\"\n            >\n                <mat-card class=\"mat-elevation-z4 center-text\">\n                    <mat-card-content>\n                        <p>{{ elem.answer_text }}</p>\n                    </mat-card-content>\n                    <mat-card-actions class=\"center-text\">\n                        <p\n                            class=\"correct-answer\"\n                            mat-button\n                            [ngClass]=\"\n                                +elem.true_answer\n                                    ? 'true-answer'\n                                    : 'false-answer'\n                            \"\n                        >\n                            {{\n                                +elem.true_answer ? 'Правильна' : 'Неправильна'\n                            }}\n                        </p>\n                    </mat-card-actions>\n                </mat-card>\n            </div>\n        </div>\n    </mat-card>\n    <button\n        mat-raised-button\n        mat-dialog-close\n        class=\"close-btn\"\n        color=\"primary\"\n        type=\"button\"\n    >\n        Закрити\n    </button>\n</div>\n","import { Component, Inject, OnInit } from '@angular/core';\nimport {\n    MatDialog,\n    MatDialogRef,\n    MAT_DIALOG_DATA,\n} from '@angular/material/dialog';\nimport { MatTableDataSource } from '@angular/material/table';\nimport { ApiService } from '../../speciality/api.service';\nimport { DetailsByQuestionComponent } from '../details-by-question/details-by-question.component';\nimport { ResultsService } from '../results.service';\n\n@Component({\n    selector: 'app-detail-dialog',\n    templateUrl: './detail-dialog.component.html',\n    styleUrls: ['./detail-dialog.component.scss'],\n})\nexport class DetailDialogComponent implements OnInit {\n    displayedColumns: string[] = ['id', 'textName', 'answer', 'details'];\n    constructor(\n        private dialog: MatDialog,\n        private dialogRef: MatDialogRef<DetailDialogComponent>,\n        private resService: ResultsService,\n        private apiService: ApiService,\n        @Inject(MAT_DIALOG_DATA) public data?\n    ) {}\n    ids: any;\n    questionsList;\n    dataSource = new MatTableDataSource();\n    ngOnInit(): void {\n        this.dataSource.data = JSON.parse(this.data.questions);\n        this.ids = this.dataSource.data.map((i) => {\n            return i['question_id'];\n        });\n        this.resService.getByEntityManager('Question', this.ids).subscribe({\n            next: (res) => {\n                if (res.response) {\n                    this.dialogRef.close();\n                    this.apiService.snackBarOpen();\n                    return;\n                }\n                this.getQuestions(res);\n            },\n        });\n    }\n    detailByQuestion(data) {\n        this.dialog.open(DetailsByQuestionComponent, {\n            data,\n            panelClass: 'custom-dialog-container',\n            maxHeight: '90vh',\n            width: '1000px',\n        });\n    }\n    private getQuestions(res) {\n        this.questionsList = res;\n        this.dataSource.data = this.questionsList.map((item) => {\n            const studentInfo = JSON.parse(this.data.true_answers).filter(\n                (data) => data.question_id === item.question_id\n            );\n            const answerData = JSON.parse(this.data.questions).filter(\n                (data) => data.question_id === item.question_id\n            );\n            return Object.assign({}, item, ...studentInfo, ...answerData);\n        });\n    }\n}\n","<table mat-table [dataSource]=\"dataSource\">\n    <ng-container matColumnDef=\"id\">\n        <th mat-header-cell *matHeaderCellDef>ID</th>\n        <td\n            mat-cell\n            *matCellDef=\"let element\"\n            [ngClass]=\"element.true ? 'true-answer' : 'false-answer'\"\n        >\n            {{ element.question_id }}\n        </td>\n    </ng-container>\n\n    <ng-container matColumnDef=\"textName\">\n        <th mat-header-cell *matHeaderCellDef>Текст запитання</th>\n        <td\n            mat-cell\n            *matCellDef=\"let element\"\n            [ngClass]=\"element.true ? 'true-answer' : 'false-answer'\"\n        >\n            {{ element.question_text }}\n        </td>\n    </ng-container>\n    <ng-container matColumnDef=\"answer\">\n        <th mat-header-cell *matHeaderCellDef>Відповідь</th>\n        <td\n            mat-cell\n            *matCellDef=\"let element\"\n            [ngClass]=\"element.true ? 'true-answer' : 'false-answer'\"\n        >\n            {{ element.true ? 'правильна' : 'неправильна' }}\n        </td>\n    </ng-container>\n    <ng-container matColumnDef=\"details\">\n        <th mat-header-cell *matHeaderCellDef>Детальніше</th>\n\n        <td\n            mat-cell\n            *matCellDef=\"let element\"\n            [ngClass]=\"element.true ? 'true-answer' : 'false-answer'\"\n        >\n            <a>\n                <mat-icon class=\"detail-btn\" (click)=\"detailByQuestion(element)\"\n                    >view_headline</mat-icon\n                >\n            </a>\n        </td>\n    </ng-container>\n\n    <tr mat-header-row *matHeaderRowDef=\"displayedColumns\"></tr>\n    <tr mat-row *matRowDef=\"let row; columns: displayedColumns\"></tr>\n</table>\n<button\n    mat-raised-button\n    mat-dialog-close\n    class=\"close-btn\"\n    color=\"primary\"\n    type=\"button\"\n>\n    Закрити\n</button>\n","import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { RouterModule, Routes } from '@angular/router';\n\nimport { ResultsComponent } from './results.component';\nimport { SharedModule } from 'src/app/shared/modules/shared.module';\nimport { DetailDialogComponent } from './detail-dialog/detail-dialog.component';\nimport { DetailsByQuestionComponent } from './details-by-question/details-by-question.component';\n\nconst routes: Routes = [{ path: '', component: ResultsComponent }];\n\n@NgModule({\n    declarations: [\n        ResultsComponent,\n        DetailDialogComponent,\n        DetailsByQuestionComponent,\n    ],\n    imports: [\n        CommonModule,\n        SharedModule,\n        RouterModule.forChild([{ path: '', component: ResultsComponent }]),\n    ],\n    exports: [ResultsComponent],\n})\nexport class ResultsModule {}\n"],"sourceRoot":"webpack:///"}