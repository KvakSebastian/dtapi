{"version":3,"sources":["./src/app/modules/admin/faculties/faculties-list/faculties-list.component.ts","./src/app/modules/admin/faculties/faculties-list/faculties-list.component.html","./src/app/modules/admin/faculties/confirm-dialog/confirm-dialog.component.ts","./src/app/modules/admin/faculties/confirm-dialog/confirm-dialog.component.html","./src/app/modules/admin/faculties/modal-form/modal-form.component.ts","./src/app/modules/admin/faculties/modal-form/modal-form.component.html","./src/app/shared/services/api.service.ts","./src/app/modules/admin/faculties/faculties.module.ts","./src/app/modules/admin/faculties/dialog.service.ts"],"names":[],"mappings":";;;;;;;;;;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAA4E;AAEjB;AAEE;;;;;;;;;;;ICoBjD,yEAAsC;IAAA,6DAAE;IAAA,4DAAK;;;IAC7C,yEACI;IAAA,uDACJ;IAAA,4DAAK;;;IADD,0DACJ;IADI,kGACJ;;;IAGA,yEAAsC;IAAA,yFAAK;IAAA,4DAAK;;;IAChD,yEACI;IAAA,uDACJ;IAAA,4DAAK;;;IADD,0DACJ;IADI,oGACJ;;;IAGA,yEAAsC;IAAA,mFAAI;IAAA,4DAAK;;;IAC/C,yEACI;IAAA,uDACJ;IAAA,4DAAK;;;IADD,0DACJ;IADI,2GACJ;;;IAGA,yEAAsC;IAAA,6EAAG;IAAA,4DAAK;;;;IAC9C,yEACI;IAAA,6EAMI;IAFA,6WAA8B;IAE9B,2EAAU;IAAA,iEAAM;IAAA,4DAAW;IAC/B,4DAAS;IACT,6EAMI;IAFA,+WAAgC;IAEhC,2EAAU;IAAA,iEAAM;IAAA,4DAAW;IAC/B,4DAAS;IACb,4DAAK;;;IAGT,oEAA4D;;;IAC5D,oEAAiE;;;IACjE,yEACI;IAAA,yEACI;IAAA,uDACJ;IAAA,4DAAK;IACT,4DAAK;;;;IAFG,0DACJ;IADI,qSACJ;;;ADnDL,MAAM,sBAAsB;IAQ/B,YACY,UAAsB,EACtB,aAA4B;QAD5B,eAAU,GAAV,UAAU,CAAY;QACtB,kBAAa,GAAb,aAAa,CAAe;QATxC,eAAU,GAAG,IAAI,0EAAkB,EAAW,CAAC;QAC/C,qBAAgB,GAAa,CAAC,IAAI,EAAE,MAAM,EAAE,aAAa,EAAE,SAAS,CAAC,CAAC;IASnE,CAAC;IAEJ,QAAQ;QACJ,IAAI,CAAC,UAAU,EAAE,CAAC;IACtB,CAAC;IACD,eAAe;QACX,IAAI,CAAC,SAAS,CAAC,KAAK,CAAC,iBAAiB,GAAG,kBAAkB,CAAC;QAC5D,IAAI,CAAC,UAAU,CAAC,SAAS,GAAG,IAAI,CAAC,SAAS,CAAC;IAC/C,CAAC;IACD,WAAW,CAAC,KAAY;QACpB,MAAM,WAAW,GAAI,KAAK,CAAC,MAA2B,CAAC,KAAK,CAAC;QAC7D,IAAI,CAAC,UAAU,CAAC,MAAM,GAAG,WAAW,CAAC,IAAI,EAAE,CAAC,WAAW,EAAE,CAAC;QAE1D,IAAI,IAAI,CAAC,UAAU,CAAC,SAAS,EAAE;YAC3B,IAAI,CAAC,UAAU,CAAC,SAAS,CAAC,SAAS,EAAE,CAAC;SACzC;IACL,CAAC;IACD,UAAU;QACN,IAAI,CAAC,UAAU,CAAC,SAAS,CAAC,SAAS,CAAC,CAAC,SAAS,CAC1C,CAAC,QAAmB,EAAE,EAAE,CAAC,CAAC,IAAI,CAAC,UAAU,CAAC,IAAI,GAAG,QAAQ,CAAC,EAC1D,CAAC,KAAK,EAAE,EAAE;YACN,IAAI,CAAC,UAAU,CAAC,YAAY,EAAE,CAAC;QACnC,CAAC,CACJ,CAAC;IACN,CAAC;IAED,SAAS,CAAC,IAAgB;QACtB,IAAI,CAAC,aAAa;aACb,WAAW,CAAC,IAAI,CAAC,CAAC,CAAC,IAAI,CAAC,CAAC,CAAC,EAAE,CAAC;aAC7B,WAAW,EAAE;aACb,SAAS,CACN,CAAC,GAAG,EAAE,EAAE,CAAC,CAAC,GAAG,CAAC,CAAC,CAAC,IAAI,CAAC,UAAU,EAAE,CAAC,CAAC,CAAC,EAAE,CAAC,EACvC,CAAC,KAAK,EAAE,EAAE;YACN,IAAI,CAAC,UAAU,CAAC,YAAY,EAAE,CAAC;QACnC,CAAC,CACJ,CAAC;IACV,CAAC;IAED,WAAW,CAAC,IAAe;QACvB,IAAI,CAAC,SAAS,CAAC,IAAI,CAAC,CAAC;IACzB,CAAC;IAED,aAAa,CAAC,IAAa;QACvB,IAAI,CAAC,aAAa;aACb,iBAAiB,CAAC,IAAI,CAAC;aACvB,WAAW,EAAE;aACb,SAAS,CACN,CAAC,GAAG,EAAE,EAAE;YACJ,IAAI,GAAG,KAAK,IAAI,EAAE;gBACd,IAAI,CAAC,UAAU,CAAC,IAAI,GAAG,IAAI,CAAC,UAAU,CAAC,IAAI,CAAC,MAAM,CAC9C,CAAC,OAAO,EAAE,EAAE,CAAC,OAAO,CAAC,UAAU,KAAK,IAAI,CAAC,UAAU,CACtD,CAAC;aACL;QACL,CAAC,EACD,CAAC,KAAK,EAAE,EAAE;YACN,IAAI,CAAC,UAAU,CAAC,YAAY,EAAE,CAAC;QACnC,CAAC,CACJ,CAAC;IACV,CAAC;;4FArEQ,sBAAsB;sGAAtB,sBAAsB;wEAMpB,wEAAY;;;;;QCvB3B,yEACI;QAAA,wEACI;QAAA,8EAAqC;QAAA,4EAAgB;QAAA,4DACpD;QAAA,wHACL;QAAA,4DAAK;QACL,4EACI;QADsC,8IAAS,eAAW,IAAC;QAC3D,2EAAU;QAAA,qEAAU;QAAA,4DAAW;QAAC,wJACpC;QAAA,4DAAS;QACb,4DAAM;QACN,iFACI;QAAA,gFACK;QAAA,+EAAqC;QAAA,yEAAa;QAAA,4DAAW;QAC9D,2FAAK;QAAA,4DACR;QACD,+EAMJ;QAJQ,oJAAS,uBAAmB,IAAC;QAFjC,4DAMJ;QAAA,4DAAiB;QACjB,0EACI;QAAA,4EACI;QAAA,6EACI;QAAA,mHAA6C;QAC7C,mHAEK;QACT,qEAAe;QACf,6EACI;QAAA,mHAAgD;QAChD,mHAEK;QACT,qEAAe;QACf,6EACI;QAAA,mHAA+C;QAC/C,mHAEK;QACT,qEAAe;QACf,6EACI;QAAA,mHAA8C;QAC9C,mHAiBK;QACT,qEAAe;QAEf,mHAA4D;QAC5D,mHAAiE;QACjE,mHAIK;QACT,4DAAQ;QACR,gFAIiB;QACrB,4DAAM;;QAtDe,2DAAyB;QAAzB,sFAAyB;QAyClB,2DAAiC;QAAjC,iGAAiC;QACpB,0DAAyB;QAAzB,kGAAyB;QAS1D,0DAAoC;QAApC,kJAAoC;;6FDxD/B,sBAAsB;cALlC,uDAAS;eAAC;gBACP,QAAQ,EAAE,oBAAoB;gBAC9B,WAAW,EAAE,iCAAiC;gBAC9C,SAAS,EAAE,CAAC,iCAAiC,CAAC;aACjD;gMAO8C,SAAS;kBAAnD,uDAAS;mBAAC,wEAAY,EAAE,EAAE,MAAM,EAAE,IAAI,EAAE;;;;;;;;;;;;;;AEvB7C;AAAA;AAAA;AAAA;AAAA;AAAA;AAAkD;AACuB;;;;;AASlE,MAAM,sBAAsB;IAC/B,YACY,SAA+C,EAC/C,UAAsB,EACE,IAAK;QAF7B,cAAS,GAAT,SAAS,CAAsC;QAC/C,eAAU,GAAV,UAAU,CAAY;QACE,SAAI,GAAJ,IAAI,CAAC;IACtC,CAAC;IAEJ,QAAQ;QACJ,IAAI,CAAC,UAAU,CAAC,SAAS,CAAC,SAAS,EAAE,IAAI,CAAC,IAAI,CAAC,UAAU,CAAC,CAAC,SAAS,CAChE,CAAC,GAAG,EAAE,EAAE;YACJ,IAAI,GAAG,CAAC,QAAQ,KAAK,IAAI;gBAAE,IAAI,CAAC,SAAS,CAAC,KAAK,CAAC,GAAG,CAAC,QAAQ,CAAC,CAAC;QAClE,CAAC,EACD,CAAC,KAAK,EAAE,EAAE;YACN,IAAI,CAAC,UAAU,CAAC,YAAY,EAAE,CAAC;QACnC,CAAC,CACJ,CAAC;IACN,CAAC;;4FAhBQ,sBAAsB,oVAInB,wEAAe;sGAJlB,sBAAsB;QCVnC,wEAAqB;QAAA,iHAAS;QAAA,4DAAK;QACnC,yEACI;QAAA,sRAA2C;QAAA,gEAC3C;QAAA,uDACJ;QAAA,4DAAM;QACN,yEACI;QAAA,4EAAoD;QAAA,iHAAS;QAAA,4DAAS;QACtE,4EAAsD;QAArB,8IAAS,cAAU,IAAC;QAAC,8HAAW;QAAA,4DAAS;QAC9E,4DAAM;;QALF,0DACJ;QADI,uGACJ;;6FDMa,sBAAsB;cALlC,uDAAS;eAAC;gBACP,QAAQ,EAAE,oBAAoB;gBAC9B,WAAW,EAAE,iCAAiC;gBAC9C,SAAS,EAAE,CAAC,iCAAiC,CAAC;aACjD;;sBAKQ,oDAAM;uBAAC,wEAAe;;;;;;;;;;;;;;AEd/B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAA0D;AACU;AACK;;;;;;;;;;ICOjE,yEAOI;IAAA,wEAAO;IAAA,mMAA0B;IAAA,4DAAQ;IAC7C,4DAAM;;;IAUN,yEAOI;IAAA,wEAAO;IAAA,mMAA0B;IAAA,4DAAQ;IAC7C,4DAAM;;ADxBP,MAAM,kBAAkB;IAC3B,YACY,WAAwB,EACxB,UAAsB,EACtB,SAA2C,EACnB,IAAK;QAH7B,gBAAW,GAAX,WAAW,CAAa;QACxB,eAAU,GAAV,UAAU,CAAY;QACtB,cAAS,GAAT,SAAS,CAAkC;QACnB,SAAI,GAAJ,IAAI,CAAC;IACtC,CAAC;IAIJ,QAAQ;QACJ,IAAI,CAAC,IAAI,GAAG,IAAI,CAAC,WAAW,CAAC,KAAK,CAAC;YAC/B,YAAY,EAAE;gBACV,IAAI,CAAC,IAAI,CAAC,CAAC,CAAC,IAAI,CAAC,IAAI,CAAC,YAAY,CAAC,CAAC,CAAC,EAAE;gBACvC,CAAC,yDAAU,CAAC,QAAQ,CAAC;aACxB;YACD,mBAAmB,EAAE;gBACjB,IAAI,CAAC,IAAI,CAAC,CAAC,CAAC,IAAI,CAAC,IAAI,CAAC,mBAAmB,CAAC,CAAC,CAAC,EAAE;gBAC9C,CAAC,yDAAU,CAAC,QAAQ,CAAC;aACxB;SACJ,CAAC,CAAC;IACP,CAAC;IACD,UAAU,CAAC,GAAW;QAClB,QAAQ,GAAG,EAAE;YACT,KAAK,QAAQ;gBACT,IAAI,CAAC,UAAU;qBACV,YAAY,CACT,SAAS,EACT,IAAI,CAAC,IAAI,CAAC,UAAU,EACpB,IAAI,CAAC,IAAI,CAAC,KAAK,CAClB;qBACA,SAAS,CACN,CAAC,GAAG,EAAE,EAAE;oBACJ,IAAI,CAAC,SAAS,CAAC,KAAK,CAAC,GAAG,CAAC,CAAC;gBAC9B,CAAC,EACD,CAAC,KAAK,EAAE,EAAE;oBACN,IAAI,CAAC,UAAU,CAAC,YAAY,EAAE,CAAC;gBACnC,CAAC,CACJ,CAAC;gBACN,MAAM;YACV,KAAK,KAAK;gBACN,IAAI,CAAC,UAAU,CAAC,SAAS,CAAC,SAAS,EAAE,IAAI,CAAC,IAAI,CAAC,KAAK,CAAC,CAAC,SAAS,CAC3D,CAAC,GAAG,EAAE,EAAE,CAAC,IAAI,CAAC,SAAS,CAAC,KAAK,CAAC,GAAG,CAAC,EAClC,CAAC,KAAK,EAAE,EAAE;oBACN,IAAI,CAAC,UAAU,CAAC,YAAY,EAAE,CAAC;gBACnC,CAAC,CACJ,CAAC;SACT;IACL,CAAC;IACD,QAAQ;QACJ,IAAI,CAAC,SAAS,CAAC,KAAK,EAAE,CAAC;IAC3B,CAAC;;oFAnDQ,kBAAkB,idAKf,wEAAe;kGALlB,kBAAkB;QCX/B,0EAKI;QAFA,8IAAY,0BAAkB,QAAQ,GAAG,KAAK,CAAC,IAAC;QAEhD,qEAAI;QAAA,uDAAwD;QAAA,4DAAK;QACjE,oFACI;QAAA,4EAAW;QAAA,+DAAI;QAAA,4DAAY;QAC3B,sEACA;QAAA,8GAQM;QACV,4DAAiB;QACjB,gEACA;QAAA,oFACI;QAAA,6EAAW;QAAA,uEAAW;QAAA,4DAAY;QAClC,uEAKA;QAAA,gHAQM;QACV,4DAAiB;QACjB,iEACA;QAAA,0EACI;QAAA,6EAMI;QAHA,2IAAS,cAAU,IAAC;QAGpB,oHACJ;QAAA,4DAAS;QACT,6EAMI;QAAA,wDACJ;QAAA,4DAAS;QACb,4DAAM;QACV,4DAAO;;QAtDH,+EAAkB;QAGd,0DAAwD;QAAxD,iSAAwD;QAMnD,0DAIX;QAJW,8IAIX;QAcW,0DAIX;QAJW,4JAIX;QAkBU,0DAAyB;QAAzB,sFAAyB;QAEzB,0DACJ;QADI,8LACJ;;6FD3CK,kBAAkB;cAL9B,uDAAS;eAAC;gBACP,QAAQ,EAAE,gBAAgB;gBAC1B,WAAW,EAAE,6BAA6B;gBAC1C,SAAS,EAAE,CAAC,6BAA6B,CAAC;aAC7C;;sBAMQ,oDAAM;uBAAC,wEAAe;;;;;;;;;;;;;;AEf/B;AAAA;AAAA;AAAA;AAAA;AAAA;AAA2C;AAIgB;;;;AAKpD,MAAM,UAAU;IACnB,YAAoB,IAAgB,EAAU,QAAqB;QAA/C,SAAI,GAAJ,IAAI,CAAY;QAAU,aAAQ,GAAR,QAAQ,CAAa;IAAG,CAAC;IAEvE,SAAS,CAAC,MAAc,EAAE,EAAW;QACjC,OAAO,IAAI,CAAC,IAAI,CAAC,GAAG,CAChB,GAAG,wEAAW,CAAC,OAAO,IAAI,MAAM,eAAe,EAAE,CAAC,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC,EAAE,EAAE,CAChE,CAAC;IACN,CAAC;IACD,SAAS,CAAC,MAAc,EAAE,OAAO;QAC7B,OAAO,IAAI,CAAC,IAAI,CAAC,IAAI,CACjB,GAAG,wEAAW,CAAC,OAAO,IAAI,MAAM,aAAa,EAC7C,OAAO,CACV,CAAC;IACN,CAAC;IACD,SAAS,CAAC,MAAc,EAAE,EAAU;QAChC,OAAO,IAAI,CAAC,IAAI,CAAC,GAAG,CAAC,GAAG,wEAAW,CAAC,OAAO,IAAI,MAAM,QAAQ,EAAE,EAAE,CAAC,CAAC;IACvE,CAAC;IACD,YAAY,CAAC,MAAc,EAAE,EAAU,EAAE,OAAO;QAC5C,OAAO,IAAI,CAAC,IAAI,CAAC,IAAI,CACjB,GAAG,wEAAW,CAAC,OAAO,IAAI,MAAM,WAAW,EAAE,EAAE,EAC/C,OAAO,CACV,CAAC;IACN,CAAC;IACD,YAAY;QACR,OAAO,IAAI,CAAC,QAAQ,CAAC,IAAI,CAAC,qBAAqB,EAAE,EAAE,EAAE;YACjD,QAAQ,EAAE,IAAI;SACjB,CAAC,CAAC;IACP,CAAC;;oEA3BQ,UAAU;6FAAV,UAAU,WAAV,UAAU,mBAFP,MAAM;6FAET,UAAU;cAHtB,wDAAU;eAAC;gBACR,UAAU,EAAE,MAAM;aACrB;;;;;;;;;;;;;;ACTD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAyC;AACM;AACQ;AAE4B;AACd;AACE;AACY;;;AAEnF,MAAM,MAAM,GAAW,CAAC,EAAE,IAAI,EAAE,EAAE,EAAE,SAAS,EAAE,+FAAsB,EAAE,CAAC,CAAC;AAWlE,MAAM,eAAe;;8FAAf,eAAe;wJAAf,eAAe,kBAHf,CAAC,4DAAY,EAAE,0EAAY,EAAE,4DAAY,CAAC,QAAQ,CAAC,MAAM,CAAC,CAAC;mIAG3D,eAAe,mBAPpB,+FAAsB;QACtB,mFAAkB;QAClB,+FAAsB,aAEhB,4DAAY,EAAE,0EAAY,EAAE,yEAC5B,+FAAsB;6FAEvB,eAAe;cAT3B,sDAAQ;eAAC;gBACN,YAAY,EAAE;oBACV,+FAAsB;oBACtB,mFAAkB;oBAClB,+FAAsB;iBACzB;gBACD,OAAO,EAAE,CAAC,4DAAY,EAAE,0EAAY,EAAE,4DAAY,CAAC,QAAQ,CAAC,MAAM,CAAC,CAAC;gBACpE,OAAO,EAAE,CAAC,+FAAsB,CAAC;aACpC;;;;;;;;;;;;;;ACnBD;AAAA;AAAA;AAAA;AAAA;AAAA;AAA2C;AAGwC;AACZ;;;AAKhE,MAAM,aAAa;IAGtB,YAAoB,MAAiB;QAAjB,WAAM,GAAN,MAAM,CAAW;IAAG,CAAC;IAEzC,iBAAiB,CAAC,IAAI;QAClB,OAAO,CAAC,IAAI,CAAC,SAAS,GAAG,IAAI,CAAC,MAAM,CAAC,IAAI,CAAC,+FAAsB,EAAE;YAC9D,IAAI;YACJ,YAAY,EAAE,IAAI;SACrB,CAAC,CAAC,CAAC;IACR,CAAC;IAED,WAAW,CAAC,IAAK;QACb,OAAO,CAAC,IAAI,CAAC,cAAc,GAAG,IAAI,CAAC,MAAM,CAAC,IAAI,CAAC,mFAAkB,EAAE;YAC/D,IAAI,EAAE,IAAI,CAAC,CAAC,CAAC,IAAI,CAAC,CAAC,CAAC,EAAE;YACtB,SAAS,EAAE,IAAI;YACf,YAAY,EAAE,IAAI;SACrB,CAAC,CAAC,CAAC;IACR,CAAC;;0EAlBQ,aAAa;gGAAb,aAAa,WAAb,aAAa,mBAFV,MAAM;6FAET,aAAa;cAHzB,wDAAU;eAAC;gBACR,UAAU,EAAE,MAAM;aACrB","file":"faculties-faculties-module.js","sourcesContent":["import { AfterViewInit, Component, OnInit, ViewChild } from '@angular/core';\n\nimport { MatPaginator } from '@angular/material/paginator';\nimport { MatDialogRef } from '@angular/material/dialog';\nimport { MatTableDataSource } from '@angular/material/table';\n\nimport { Faculty } from '../../../../shared/interfaces/entity.interfaces';\nimport { ApiService } from '../../../../shared/services/api.service';\nimport { ModalFormComponent } from '../modal-form/modal-form.component';\nimport { ConfirmDialogComponent } from '../confirm-dialog/confirm-dialog.component';\nimport { DialogService } from '../dialog.service';\n\n@Component({\n    selector: 'app-faculties-list',\n    templateUrl: './faculties-list.component.html',\n    styleUrls: ['./faculties-list.component.scss'],\n})\nexport class FacultiesListComponent implements OnInit, AfterViewInit {\n    dataSource = new MatTableDataSource<Faculty>();\n    displayedColumns: string[] = ['id', 'name', 'description', 'buttons'];\n    fileNameDialogRef: MatDialogRef<ModalFormComponent>;\n    confirmDialogRef: MatDialogRef<ConfirmDialogComponent>;\n\n    @ViewChild(MatPaginator, { static: true }) paginator: MatPaginator;\n\n    constructor(\n        private apiService: ApiService,\n        private dialogService: DialogService\n    ) {}\n\n    ngOnInit(): void {\n        this.getFaculty();\n    }\n    ngAfterViewInit(): void {\n        this.paginator._intl.itemsPerPageLabel = 'Рядків у таблиці';\n        this.dataSource.paginator = this.paginator;\n    }\n    applyFilter(event: Event): void {\n        const filterValue = (event.target as HTMLInputElement).value;\n        this.dataSource.filter = filterValue.trim().toLowerCase();\n\n        if (this.dataSource.paginator) {\n            this.dataSource.paginator.firstPage();\n        }\n    }\n    getFaculty(): void {\n        this.apiService.getEntity('Faculty').subscribe(\n            (response: Faculty[]) => (this.dataSource.data = response),\n            (error) => {\n                this.apiService.snackBarOpen();\n            }\n        );\n    }\n\n    openModal(data?: Faculty[]): void {\n        this.dialogService\n            .createModal(data ? data : '')\n            .afterClosed()\n            .subscribe(\n                (res) => (res ? this.getFaculty() : ''),\n                (error) => {\n                    this.apiService.snackBarOpen();\n                }\n            );\n    }\n\n    editFaculty(elem: Faculty[]): void {\n        this.openModal(elem);\n    }\n\n    deleteFaculty(data: Faculty): void {\n        this.dialogService\n            .openConfirmDialog(data)\n            .afterClosed()\n            .subscribe(\n                (res) => {\n                    if (res === 'ok') {\n                        this.dataSource.data = this.dataSource.data.filter(\n                            (Faculty) => Faculty.faculty_id !== data.faculty_id\n                        );\n                    }\n                },\n                (error) => {\n                    this.apiService.snackBarOpen();\n                }\n            );\n    }\n}\n","<div class=\"entity-header\">\n    <h1 class=\"mat-h1 entity-title\">\n        <mat-icon class=\"entity-title-icon\"> account_balance </mat-icon\n        >Факультети\n    </h1>\n    <button mat-raised-button color=\"primary\" (click)=\"openModal()\">\n        <mat-icon>add_circle</mat-icon> Додати Факультет\n    </button>\n</div>\n<mat-form-field>\n    <mat-label class=\"entity-search-label\"\n        ><mat-icon class=\"entity-search-icon\">person_search</mat-icon>\n        Пошук</mat-label\n    >\n    <input\n        matInput\n        (keyup)=\"applyFilter($event)\"\n        placeholder=\"Введіть характеристику\"\n        #input\n    />\n</mat-form-field>\n<div class=\"mat-elevation-z8\">\n    <table mat-table [dataSource]=\"dataSource\">\n        <ng-container matColumnDef=\"id\">\n            <th mat-header-cell *matHeaderCellDef>ID</th>\n            <td mat-cell *matCellDef=\"let element\">\n                {{ element.faculty_id }}\n            </td>\n        </ng-container>\n        <ng-container matColumnDef=\"name\">\n            <th mat-header-cell *matHeaderCellDef>Назва</th>\n            <td mat-cell *matCellDef=\"let element\">\n                {{ element.faculty_name }}\n            </td>\n        </ng-container>\n        <ng-container matColumnDef=\"description\">\n            <th mat-header-cell *matHeaderCellDef>Опис</th>\n            <td mat-cell *matCellDef=\"let element\">\n                {{ element.faculty_description }}\n            </td>\n        </ng-container>\n        <ng-container matColumnDef=\"buttons\">\n            <th mat-header-cell *matHeaderCellDef>Дія</th>\n            <td mat-cell *matCellDef=\"let element\" class=\"action-link\">\n                <button\n                    class=\"operation-button\"\n                    mat-flat-button\n                    color=\"primary\"\n                    (click)=\"editFaculty(element)\"\n                >\n                    <mat-icon>create</mat-icon>\n                </button>\n                <button\n                    class=\"operation-button\"\n                    mat-flat-button\n                    color=\"primary\"\n                    (click)=\"deleteFaculty(element)\"\n                >\n                    <mat-icon>delete</mat-icon>\n                </button>\n            </td>\n        </ng-container>\n\n        <tr mat-header-row *matHeaderRowDef=\"displayedColumns\"></tr>\n        <tr mat-row *matRowDef=\"let row; columns: displayedColumns\"></tr>\n        <tr class=\"mat-row\" *matNoDataRow>\n            <td class=\"mat-cell\" colspan=\"4\">\n                Нічого не знайдено за заданим фільтром \"{{ input.value }}\"\n            </td>\n        </tr>\n    </table>\n    <mat-paginator\n        class=\"paginator\"\n        [pageSizeOptions]=\"[10, 15, 20, 25]\"\n        showFirstLastButtons\n    ></mat-paginator>\n</div>\n","import { Component, Inject } from '@angular/core';\nimport { MatDialogRef, MAT_DIALOG_DATA } from '@angular/material/dialog';\n\nimport { ApiService } from '../../../../shared/services/api.service';\n\n@Component({\n    selector: 'app-confirm-dialog',\n    templateUrl: './confirm-dialog.component.html',\n    styleUrls: ['./confirm-dialog.component.scss'],\n})\nexport class ConfirmDialogComponent {\n    constructor(\n        private dialogRef: MatDialogRef<ConfirmDialogComponent>,\n        private apiService: ApiService,\n        @Inject(MAT_DIALOG_DATA) public data?\n    ) {}\n\n    agreeBtn(): void {\n        this.apiService.delEntity('Faculty', this.data.faculty_id).subscribe(\n            (res) => {\n                if (res.response === 'ok') this.dialogRef.close(res.response);\n            },\n            (error) => {\n                this.apiService.snackBarOpen();\n            }\n        );\n    }\n}\n","<h1 mat-dialog-title>Видалення</h1>\n<div mat-dialog-content>\n    Ви впевнені, що хочете видалити факультет: <br />\n    \"{{ data.faculty_name }}\"?\n</div>\n<div mat-dialog-actions class=\"confirm-button\">\n    <button mat-button mat-dialog-close class=\"decline\">Відмінити</button>\n    <button mat-button class=\"agree\" (click)=\"agreeBtn()\">Підтвердити</button>\n</div>\n","import { Component, Inject, OnInit } from '@angular/core';\nimport { FormBuilder, FormGroup, Validators } from '@angular/forms';\nimport { MatDialogRef, MAT_DIALOG_DATA } from '@angular/material/dialog';\n\nimport { ApiService } from '../../../../shared/services/api.service';\n\n@Component({\n    selector: 'app-modal-form',\n    templateUrl: './modal-form.component.html',\n    styleUrls: ['./modal-form.component.scss'],\n})\nexport class ModalFormComponent implements OnInit {\n    constructor(\n        private formBuilder: FormBuilder,\n        private apiService: ApiService,\n        private dialogRef: MatDialogRef<ModalFormComponent>,\n        @Inject(MAT_DIALOG_DATA) public data?\n    ) {}\n\n    form: FormGroup;\n\n    ngOnInit() {\n        this.form = this.formBuilder.group({\n            faculty_name: [\n                this.data ? this.data.faculty_name : '',\n                [Validators.required],\n            ],\n            faculty_description: [\n                this.data ? this.data.faculty_description : '',\n                [Validators.required],\n            ],\n        });\n    }\n    addFaculty(str: string): void {\n        switch (str) {\n            case 'update':\n                this.apiService\n                    .updateEntity(\n                        'Faculty',\n                        this.data.faculty_id,\n                        this.form.value\n                    )\n                    .subscribe(\n                        (res) => {\n                            this.dialogRef.close(res);\n                        },\n                        (error) => {\n                            this.apiService.snackBarOpen();\n                        }\n                    );\n                break;\n            case 'add':\n                this.apiService.addEntity('Faculty', this.form.value).subscribe(\n                    (res) => this.dialogRef.close(res),\n                    (error) => {\n                        this.apiService.snackBarOpen();\n                    }\n                );\n        }\n    }\n    onCancel(): void {\n        this.dialogRef.close();\n    }\n}\n","<form\n    class=\"example-form\"\n    [formGroup]=\"form\"\n    (ngSubmit)=\"addFaculty(data ? 'update' : 'add')\"\n>\n    <h1>{{ data ? 'Редагувати факультет' : 'Додати факультет' }}</h1>\n    <mat-form-field class=\"example-full-width\">\n        <mat-label>Name</mat-label>\n        <input matInput placeholder=\"Name\" formControlName=\"faculty_name\" />\n        <div\n            class=\"validation\"\n            *ngIf=\"\n                form.get('faculty_name').invalid &&\n                form.get('faculty_name').touched\n            \"\n        >\n            <small>Поле не може бути порожнім</small>\n        </div>\n    </mat-form-field>\n    <br />\n    <mat-form-field class=\"example-full-width\">\n        <mat-label>Description</mat-label>\n        <input\n            matInput\n            placeholder=\"Description\"\n            formControlName=\"faculty_description\"\n        />\n        <div\n            class=\"validation\"\n            *ngIf=\"\n                form.get('faculty_description').invalid &&\n                form.get('faculty_description').touched\n            \"\n        >\n            <small>Поле не може бути порожнім</small>\n        </div>\n    </mat-form-field>\n    <br />\n    <div class=\"confirm-dialog\">\n        <button\n            mat-raised-button\n            type=\"button\"\n            (click)=\"onCancel()\"\n            class=\"decline\"\n        >\n            Відмінити\n        </button>\n        <button\n            mat-raised-button\n            class=\"agree\"\n            type=\"submit\"\n            [disabled]=\"form.invalid\"\n        >\n            {{ data ? 'Редагувати' : 'Додати' }}\n        </button>\n    </div>\n</form>\n","import { HttpClient } from '@angular/common/http';\nimport { Injectable } from '@angular/core';\nimport { MatSnackBar } from '@angular/material/snack-bar';\nimport { Observable } from 'rxjs';\n\nimport { environment } from 'src/environments/environment';\n\n@Injectable({\n    providedIn: 'root',\n})\nexport class ApiService {\n    constructor(private http: HttpClient, private snackBar: MatSnackBar) {}\n\n    getEntity(entity: string, id?: number): Observable<any> {\n        return this.http.get(\n            `${environment.BASEURL}/${entity}/getRecords/${id ? id : ''}`\n        );\n    }\n    addEntity(entity: string, payload): Observable<any> {\n        return this.http.post(\n            `${environment.BASEURL}/${entity}/insertData`,\n            payload\n        );\n    }\n    delEntity(entity: string, id: number): Observable<any> {\n        return this.http.get(`${environment.BASEURL}/${entity}/del/${id}`);\n    }\n    updateEntity(entity: string, id: number, payload): Observable<any> {\n        return this.http.post(\n            `${environment.BASEURL}/${entity}/update/${id}`,\n            payload\n        );\n    }\n    snackBarOpen(): any {\n        return this.snackBar.open('Щось пішло не так:(', '', {\n            duration: 1500,\n        });\n    }\n}\n","import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { RouterModule, Routes } from '@angular/router';\n\nimport { FacultiesListComponent } from './faculties-list/faculties-list.component';\nimport { SharedModule } from '../../../shared/modules/shared.module';\nimport { ModalFormComponent } from './modal-form/modal-form.component';\nimport { ConfirmDialogComponent } from './confirm-dialog/confirm-dialog.component';\n\nconst routes: Routes = [{ path: '', component: FacultiesListComponent }];\n\n@NgModule({\n    declarations: [\n        FacultiesListComponent,\n        ModalFormComponent,\n        ConfirmDialogComponent,\n    ],\n    imports: [CommonModule, SharedModule, RouterModule.forChild(routes)],\n    exports: [FacultiesListComponent],\n})\nexport class FacultiesModule {}\n","import { Injectable } from '@angular/core';\nimport { MatDialog, MatDialogRef } from '@angular/material/dialog';\n\nimport { ConfirmDialogComponent } from './confirm-dialog/confirm-dialog.component';\nimport { ModalFormComponent } from './modal-form/modal-form.component';\n\n@Injectable({\n    providedIn: 'root',\n})\nexport class DialogService {\n    dialogRef: MatDialogRef<ConfirmDialogComponent>;\n    modalDialogRef: MatDialogRef<ModalFormComponent>;\n    constructor(private dialog: MatDialog) {}\n\n    openConfirmDialog(data): any {\n        return (this.dialogRef = this.dialog.open(ConfirmDialogComponent, {\n            data,\n            disableClose: true,\n        }));\n    }\n\n    createModal(data?): any {\n        return (this.modalDialogRef = this.dialog.open(ModalFormComponent, {\n            data: data ? data : '',\n            autoFocus: true,\n            disableClose: true,\n        }));\n    }\n}\n"],"sourceRoot":"webpack:///"}