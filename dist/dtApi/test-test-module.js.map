{"version":3,"sources":["./src/app/modules/admin/test/test.module.ts","./src/app/modules/admin/test/import-export-dialog/import-export-dialog.component.ts","./src/app/modules/admin/test/import-export-dialog/import-export-dialog.component.html","./src/app/modules/admin/test/test-modal/test-modal.component.ts","./src/app/modules/admin/test/test-modal/test-modal.component.html","./src/app/modules/admin/test/import-export-dialog/import-export.service.ts","./src/app/modules/admin/test/test.component.ts","./src/app/modules/admin/test/test.component.html"],"names":[],"mappings":"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","file":"test-test-module.js","sourcesContent":["import { NgModule } from '@angular/core';\nimport { RouterModule, Routes } from '@angular/router';\nimport { CommonModule } from '@angular/common';\nimport { SharedModule } from '../../../shared/modules/shared.module';\nimport { MaterialFileInputModule } from 'ngx-material-file-input';\n\nimport { TestComponent } from './test.component';\nimport { TestModalComponent } from './test-modal/test-modal.component';\nimport { ImportExportDialogComponent } from './import-export-dialog/import-export-dialog.component';\n\nconst testsRoutes: Routes = [{ path: '', component: TestComponent }];\n\n@NgModule({\n    declarations: [\n        TestComponent,\n        TestModalComponent,\n        ImportExportDialogComponent,\n    ],\n    imports: [\n        CommonModule,\n        SharedModule,\n        MaterialFileInputModule,\n        RouterModule.forChild(testsRoutes),\n    ],\n})\nexport class TestModule {}\n","import { Component, OnInit, Inject } from '@angular/core';\nimport { MatDialogRef, MAT_DIALOG_DATA } from '@angular/material/dialog';\nimport { forkJoin, of } from 'rxjs';\nimport { FormControl, FormGroup } from '@angular/forms';\nimport { mergeMap } from 'rxjs/operators';\nimport { ModalService } from 'src/app/shared/services/modal.service';\n\nimport { ImportExportService } from './import-export.service';\n\nexport interface DialogData {\n    test_id: string;\n}\nexport interface Records {\n    numberOfRecords: string;\n}\nexport interface QuestionInstance {\n    question_id: number;\n    test_id: string;\n    question_text: string;\n    level: string;\n    type: string;\n    answers?: any;\n}\n\n@Component({\n    selector: 'app-import-export-dialog',\n    templateUrl: './import-export-dialog.component.html',\n    styleUrls: ['./import-export-dialog.component.scss'],\n})\nexport class ImportExportDialogComponent implements OnInit {\n    isExport = false;\n    isImport = false;\n    count: string;\n    questions: [];\n    questionsIds: [];\n    testFullData: any = [];\n    ieForm: FormGroup;\n    file: any;\n    fileData: any;\n    questionsImportData: Array<QuestionInstance> = [];\n    answersImportData: any = [];\n\n    constructor(\n        public dialogRef: MatDialogRef<ImportExportDialogComponent>,\n        private ieService: ImportExportService,\n        private modalService: ModalService,\n        @Inject(MAT_DIALOG_DATA) public data: DialogData\n    ) {}\n\n    ngOnInit(): void {\n        this.ieForm = new FormGroup({\n            atachment: new FormControl(),\n        });\n    }\n    exportTests() {\n        this.isExport = true;\n        this.ieService\n            .getCount('question', this.data.test_id)\n            .pipe(\n                mergeMap((res: Records) => {\n                    this.count = res.numberOfRecords;\n                    return this.ieService\n                        .getQuestions('question', this.data.test_id, this.count)\n                        .pipe(\n                            mergeMap((item) => {\n                                this.questions = item;\n                                this.questionsIds = item.map((item) => {\n                                    return item.question_id;\n                                });\n                                const observables = this.questionsIds.map(\n                                    (id) =>\n                                        this.ieService.getAnswers('answer', id)\n                                );\n                                return forkJoin(observables);\n                            })\n                        );\n                })\n            )\n            .subscribe((res) => {\n                this.questions.forEach((item: any) => {\n                    res.forEach((elem: any) => {\n                        if (item.question_id === elem[0].question_id) {\n                            this.testFullData.push({\n                                ...item,\n                                answers: elem,\n                            });\n                        }\n                    });\n                });\n                const blob = new Blob(\n                    [JSON.stringify(this.testFullData, null, 2)],\n                    {\n                        type: 'text/json',\n                    }\n                );\n\n                const url = URL.createObjectURL(blob);\n                const link = document.createElement('a');\n                link.setAttribute('href', url);\n                link.setAttribute('download', 'data.json');\n                link.click();\n            });\n    }\n    importTests() {\n        this.isImport = true;\n    }\n    fileUpload(e) {\n        this.file = e.target.files[0];\n        const fileReader = new FileReader();\n        fileReader.onload = (e) => {\n            this.fileData = JSON.parse(fileReader.result.toString());\n            this.insertQuestions(this.fileData);\n        };\n        fileReader.readAsText(this.file);\n    }\n    insertQuestions(fileData) {\n        fileData.map((item: QuestionInstance) => {\n            this.answersImportData.push([...item.answers]);\n            delete item.answers;\n            delete item.question_id;\n            return item;\n        });\n        of(fileData)\n            .pipe(\n                mergeMap((res) => {\n                    const quwstionsObservables = res.map((item) =>\n                        this.ieService.insertData('question', item)\n                    );\n\n                    return forkJoin(quwstionsObservables);\n                })\n            )\n            .pipe(\n                mergeMap((res: any) => {\n                    const newAnswers = [];\n\n                    this.answersImportData.forEach((item, ind) => {\n                        item.forEach((elem) => {\n                            newAnswers.push({\n                                ...elem,\n                                question_id: res[ind][0].question_id,\n                            });\n                        });\n                    });\n                    const answersObservables = newAnswers.map((item) => {\n                        delete item.answer_id;\n                        return this.ieService.insertData('answer', item);\n                    });\n                    return forkJoin(answersObservables);\n                })\n            )\n            .subscribe((res) => {\n                this.dialogRef.close();\n                this.modalService.showSnackBar('Тести Імпортовано');\n            });\n    }\n}\n","<h2 mat-dialog-title>Експорт/імпорт запитань</h2>\n<mat-dialog-content class=\"mat-typography\" *ngIf=\"!isExport && !isImport\">\n    <p>Виберіть дію</p>\n</mat-dialog-content>\n<mat-dialog-content class=\"mat-typography\" *ngIf=\"isExport && !isImport\">\n    <p>Ви успішно імпортували</p>\n</mat-dialog-content>\n<form [formGroup]=\"ieForm\" *ngIf=\"isImport\">\n    <mat-form-field>\n        <ngx-mat-file-input\n            formControlName=\"atachment\"\n            placeholder=\"Basic Input\"\n            (change)=\"fileUpload($event)\"\n        ></ngx-mat-file-input>\n\n        <mat-icon matSuffix>folder</mat-icon>\n    </mat-form-field>\n</form>\n<mat-dialog-actions align=\"end\">\n    <button mat-button [mat-dialog-close]=\"false\" cdkFocusInitial>\n        Відмінити\n    </button>\n    <button mat-raised-button color=\"primary\" (click)=\"exportTests()\">\n        Експортувати\n    </button>\n    <button mat-raised-button color=\"primary\" (click)=\"importTests()\">\n        імпортувати\n    </button></mat-dialog-actions\n>\n","import { Component, OnInit, Inject } from '@angular/core';\n\nimport { DialogData, Subject } from '../test.interfaces';\n\nimport { TestService } from '../services/test.service';\nimport { FormBuilder, FormGroup, Validators } from '@angular/forms';\n\nimport { MatDialogRef, MAT_DIALOG_DATA } from '@angular/material/dialog';\n\n@Component({\n    selector: 'app-test-modal',\n    templateUrl: './test-modal.component.html',\n    styleUrls: ['./test-modal.component.scss'],\n})\nexport class TestModalComponent implements OnInit {\n    subjects: Subject[] = [];\n    form: FormGroup;\n    constructor(\n        private formBuilder: FormBuilder,\n        private testService: TestService,\n        public dialogRef: MatDialogRef<TestModalComponent>,\n        @Inject(MAT_DIALOG_DATA) public data: DialogData\n    ) {}\n\n    ngOnInit() {\n        this.form = this.formBuilder.group({\n            test_name: [\n                this.data ? this.data.data.test_name : '',\n                [Validators.required],\n            ],\n            subject_id: [\n                this.data ? this.data.data.subject_id : '',\n                [Validators.required],\n            ],\n            tasks: [\n                this.data ? this.data.data.tasks : '',\n                [Validators.required],\n            ],\n            time_for_test: [\n                this.data ? this.data.data.time_for_test : '',\n                [Validators.required],\n            ],\n            attempts: [\n                this.data ? this.data.data.attempts : '',\n                [Validators.required],\n            ],\n            enabled: [\n                this.data ? this.data.data.enabled : '',\n                [Validators.required],\n            ],\n        });\n        this.testService.getEntity('subject').subscribe((result: Subject[]) => {\n            this.subjects = result;\n        });\n    }\n    sendTest() {\n        this.dialogRef.close(this.form.value);\n    }\n}\n","<!-- <h3 mat-dialog-title>{{data.description.title}}</h3> -->\n<form [formGroup]=\"form\" (ngSubmit)=\"sendTest()\">\n    <div mat-dialog-content>\n        <mat-form-field class=\"example-full-width\">\n            <input\n                matInput\n                placeholder=\"Назва тесту\"\n                formControlName=\"test_name\"\n            />\n            <mat-error\n                *ngIf=\"\n                    form.get('test_name').invalid &&\n                    form.get('test_name').touched\n                \"\n            >\n                Поле не має бути пустим\n            </mat-error>\n        </mat-form-field>\n        <mat-form-field class=\"example-full-width\">\n            <mat-label>Предмет</mat-label>\n            <mat-select name=\"subject_id\" formControlName=\"subject_id\">\n                <mat-option\n                    *ngFor=\"let item of subjects\"\n                    [value]=\"item.subject_id\"\n                >\n                    {{ item.subject_name }}\n                </mat-option>\n            </mat-select>\n            <mat-error\n                *ngIf=\"\n                    form.get('subject_id').invalid &&\n                    form.get('subject_id').touched\n                \"\n            >\n                Поле не має бути пустим\n            </mat-error>\n        </mat-form-field>\n        <mat-form-field class=\"example-full-width\">\n            <mat-label>Кількість завдань</mat-label>\n            <input matInput type=\"number\" formControlName=\"tasks\" required />\n            <mat-error\n                *ngIf=\"form.get('tasks').invalid && form.get('tasks').touched\"\n            >\n                Поле не має бути пустим\n            </mat-error>\n        </mat-form-field>\n        <mat-form-field class=\"example-full-width\">\n            <mat-label>Час (хв)</mat-label>\n            <input matInput type=\"number\" formControlName=\"time_for_test\" />\n            <mat-error\n                *ngIf=\"\n                    form.get('time_for_test').invalid &&\n                    form.get('time_for_test').touched\n                \"\n            >\n                Поле не має бути пустим\n            </mat-error>\n        </mat-form-field>\n        <mat-form-field class=\"example-full-width\">\n            <mat-label>Кількість спроб</mat-label>\n            <input matInput type=\"number\" formControlName=\"attempts\" />\n            <mat-error\n                *ngIf=\"\n                    form.get('attempts').invalid && form.get('attempts').touched\n                \"\n            >\n                Поле не має бути пустим\n            </mat-error>\n        </mat-form-field>\n        <label class=\"example-margin\">Стан:</label>\n        <mat-radio-group formControlName=\"enabled\">\n            <mat-radio-button value=\"1\" class=\"radio-btn\"\n                >Доступний</mat-radio-button\n            >\n            <mat-radio-button value=\"0\" class=\"radio-btn\"\n                >Недоступний</mat-radio-button\n            >\n        </mat-radio-group>\n    </div>\n    <div class=\"toolbar\" mat-dialog-actions>\n        <button mat-raised-button mat-dialog-close>Відмінити</button>\n        <button mat-button type=\"submit\" [disabled]=\"form.invalid\">\n            Зберегти\n        </button>\n    </div>\n</form>\n","import { Injectable } from '@angular/core';\nimport { HttpClient } from '@angular/common/http';\nimport { environment } from 'src/environments/environment';\nimport { Observable, of } from 'rxjs';\nimport { map, mergeMap } from 'rxjs/operators';\n\nexport interface Records {\n    numberOfRecords: string;\n}\n\n@Injectable({\n    providedIn: 'root',\n})\nexport class ImportExportService {\n    questionsIds: [];\n    constructor(private http: HttpClient) {}\n\n    public getAnswers(entity, id): Observable<any> {\n        return this.http.get(\n            `${environment.BASEURL}${entity}/getAnswersByQuestion/${id}`\n        );\n    }\n    public getQuestions(entity, id, num): Observable<any> {\n        return this.http.get(\n            `${environment.BASEURL}${entity}/getRecordsRangeByTest/${id}/${num}/0`\n        );\n    }\n    public getCount(entity: string, id: string) {\n        return this.http.get(\n            `${environment.BASEURL}${entity}/countRecordsByTest/${id}`\n        );\n    }\n\n    public importTests(entity, id): Observable<any> {\n        return this.http.get(\n            `${environment.BASEURL}${entity}/getAnswersByQuestion/${id}`\n        );\n    }\n    public insertData(entity, payload): Observable<any> {\n        return this.http.post(\n            `${environment.BASEURL}${entity}/insertData`,\n            payload\n        );\n    }\n}\n","import { Component, ViewChild, OnInit } from '@angular/core';\nimport { Router, ActivatedRoute } from '@angular/router';\nimport { forkJoin, Subscription, Observable } from 'rxjs';\n\nimport { TestService } from './services/test.service';\nimport { TestModalComponent } from './test-modal/test-modal.component';\nimport { ModalService } from 'src/app/shared/services/modal.service';\n\nimport { MatPaginator } from '@angular/material/paginator';\nimport { MatTableDataSource, MatTable } from '@angular/material/table';\nimport { MatSort } from '@angular/material/sort';\nimport { MatDialog } from '@angular/material/dialog';\nimport { ServiceResponse, Test, Subject, DialogData } from './test.interfaces';\nimport { ConfirmDeleteComponent } from '../groups/confirm-delete/confirm-delete.component';\nimport { ImportExportDialogComponent } from './import-export-dialog/import-export-dialog.component';\n\n@Component({\n    selector: 'app-tests',\n    templateUrl: './test.component.html',\n    styleUrls: ['./test.component.scss'],\n})\nexport class TestComponent implements OnInit {\n    tests: Test[] = [];\n    subjects: Subject[] = [];\n    groupID: number;\n\n    subject_id: string;\n\n    displayedColumns: string[] = [\n        'test_id',\n        'test_name',\n        'subject',\n        'tasks',\n        'time_for_test',\n        'attempts',\n        'actions',\n    ];\n\n    dataSource = new MatTableDataSource<Test>();\n    testSubscription: Subscription;\n\n    @ViewChild('table', { static: true }) table: MatTable<Test>;\n    @ViewChild(MatPaginator, { static: true }) paginator: MatPaginator;\n    @ViewChild(MatSort, { static: true }) sort: MatSort;\n\n    constructor(\n        private testService: TestService,\n        private modalService: ModalService,\n        private route: ActivatedRoute,\n        public dialog: MatDialog,\n        private router: Router\n    ) {}\n\n    ngOnInit() {\n        this.groupID = this.route.snapshot.params['id'];\n        this.testSubscription = forkJoin({\n            tests: this.getTests(this.groupID),\n            subjects: this.getSubjects(),\n        }).subscribe(\n            (res: ServiceResponse) => {\n                this.tests = res.tests;\n                this.dataSource.data = this.tests;\n                this.subjects = res.subjects;\n                this.modalService.showSnackBar('Тести завантажено');\n                this.dataSource.paginator = this.paginator;\n                this.dataSource.sort = this.sort;\n            },\n            (err) => {\n                this.modalService.showSnackBar(\n                    'Cталася помилка при завантаженні тестів'\n                );\n            }\n        );\n    }\n\n    getTests(id: number): Observable<Test[]> {\n        return this.testService.getTests('test', id);\n    }\n\n    getSubjects(): Observable<Subject[]> {\n        return this.testService.getEntity('subject');\n    }\n\n    applyFilter(event: Event): void {\n        const filterValue = (event.target as HTMLInputElement).value;\n        this.dataSource.filter = filterValue.trim().toLowerCase();\n\n        if (this.dataSource.paginator) this.dataSource.paginator.firstPage();\n    }\n    openEIDialog(test: Test): void {\n        const dialogRef = this.dialog.open(ImportExportDialogComponent, {\n            width: '600px',\n            data: {\n                test_id: test.test_id,\n            },\n        });\n\n        dialogRef.afterClosed().subscribe((result) => {\n            if (result) {\n            }\n        });\n    }\n    openAddDialog(): void {\n        const test = {};\n        const dialogRef = this.dialog.open(TestModalComponent, {\n            width: '600px',\n            data: {\n                data: test,\n            },\n        });\n\n        dialogRef.afterClosed().subscribe((result) => {\n            if (result) this.addTest(result);\n        });\n    }\n\n    openEditDialog(test: Test): void {\n        const dialogRef = this.dialog.open(TestModalComponent, {\n            width: '600px',\n            data: {\n                data: test,\n            },\n        });\n        dialogRef.afterClosed().subscribe((result) => {\n            if (result) {\n                this.editTest(result, test.test_id);\n            }\n        });\n    }\n\n    getSubjectNameById(subjectId: number): string {\n        const subject = this.subjects.find(\n            (subjectItem) => subjectItem.subject_id === subjectId\n        );\n        if (subject) return subject.subject_name;\n        return 'Undefined';\n    }\n\n    addTest(test: Test): void {\n        this.testSubscription = this.testService\n            .createEntity('test', test)\n            .subscribe((result: Test[]) => {\n                this.dataSource.data = this.dataSource.data.concat(result);\n                this.dataSource.paginator.lastPage();\n                this.modalService.showSnackBar('Тест додано');\n            });\n    }\n\n    editTest(test: Test, id: number): void {\n        this.testSubscription = this.testService\n            .updateEntity('test', test, id)\n            .subscribe((data: Test) => {\n                const newSourse = this.dataSource.data.map((item) => {\n                    if (item.test_id === id) {\n                        return (item = {\n                            ...data[0],\n                        });\n                    } else {\n                        return item;\n                    }\n                });\n                this.dataSource.data = newSourse;\n                this.modalService.showSnackBar('Тест змінено');\n            });\n    }\n\n    redirectToDelete(test: Test): void {\n        const dialogRef = this.dialog.open(ConfirmDeleteComponent, {\n            width: '300px',\n            data: {\n                group_name: test.test_name,\n            },\n        });\n        dialogRef.afterClosed().subscribe((result: boolean) => {\n            if (result) {\n                this.removeTest(test.test_id);\n            } else {\n                this.dataSource.paginator = this.paginator;\n                this.dataSource.sort = this.sort;\n            }\n        });\n    }\n    removeTest(id: number): void {\n        this.testSubscription = this.testService\n            .deleteEntity('test', id)\n            .subscribe(\n                () => {\n                    this.dataSource.data = this.dataSource.data.filter(\n                        (t) => t.test_id !== id\n                    );\n                    this.modalService.showSnackBar('Тест видалено');\n                },\n                (error) =>\n                    this.modalService.showSnackBar('Тест неможливо видалити')\n            );\n    }\n    public redirectToTestDetail(id: string) {\n        this.router.navigate([`admin/subjects/tests/${id}/test-detailes`], {\n            queryParams: {\n                test_id: id,\n            },\n        });\n    }\n    navigateToTestQuestions(id: number): void {\n        this.router.navigate([`admin/subjects/tests/${id}/questions`]);\n    }\n    ngOnDestroy(): void {\n        if (this.testSubscription) {\n            this.testSubscription.unsubscribe();\n        }\n    }\n}\n","<div class=\"entity-header\">\n    <h1 class=\"mat-h1 entity-title\">\n        <mat-icon class=\"entity-title-icon\">playlist_add_check </mat-icon>Тести\n    </h1>\n    <button mat-raised-button color=\"primary\" (click)=\"openAddDialog()\">\n        <mat-icon>add_circle</mat-icon> Додати тест\n    </button>\n</div>\n\n<mat-form-field>\n    <mat-label class=\"entity-search-label\">\n        <mat-icon class=\"entity-search-icon\">person_search</mat-icon>\n        Пошук\n    </mat-label>\n    <input\n        matInput\n        (keyup)=\"applyFilter($event)\"\n        placeholder=\"Введіть тест\"\n        #input\n    />\n</mat-form-field>\n<div class=\"mat-elevation-z8\">\n    <table\n        mat-table\n        [dataSource]=\"dataSource\"\n        matSort\n        matSortStart=\"desc\"\n        #tabl\n        e\n    >\n        <ng-container matColumnDef=\"test_id\">\n            <th mat-header-cell *matHeaderCellDef mat-sort-header>№</th>\n            <td mat-cell *matCellDef=\"let element\">\n                {{ element.test_id }}\n            </td>\n        </ng-container>\n        <ng-container matColumnDef=\"test_name\">\n            <th mat-header-cell *matHeaderCellDef mat-sort-header>Назва</th>\n            <td mat-cell *matCellDef=\"let element\">\n                {{ element.test_name }}\n            </td>\n        </ng-container>\n        <ng-container matColumnDef=\"subject\">\n            <th mat-header-cell *matHeaderCellDef mat-sort-header>Предмет</th>\n            <td mat-cell *matCellDef=\"let element\">\n                {{ getSubjectNameById(element.subject_id) }}\n            </td>\n        </ng-container>\n        <ng-container matColumnDef=\"tasks\">\n            <th mat-header-cell *matHeaderCellDef mat-sort-header>Завдання</th>\n            <td mat-cell *matCellDef=\"let element\">{{ element.tasks }}</td>\n        </ng-container>\n        <ng-container matColumnDef=\"time_for_test\">\n            <th mat-header-cell *matHeaderCellDef mat-sort-header>\n                Тривалість\n            </th>\n            <td mat-cell *matCellDef=\"let element\">\n                {{ element.time_for_test }}\n            </td>\n        </ng-container>\n        <ng-container matColumnDef=\"attempts\">\n            <th mat-header-cell *matHeaderCellDef mat-sort-header>Спроби</th>\n            <td mat-cell *matCellDef=\"let element\">\n                {{ element.attempts }}\n            </td>\n        </ng-container>\n        <ng-container matColumnDef=\"actions\">\n            <th mat-header-cell *matHeaderCellDef mat-sort-header>Дії</th>\n            <td mat-cell *matCellDef=\"let element\">\n                <button\n                    class=\"operation-button\"\n                    mat-flat-button\n                    color=\"primary\"\n                    (click)=\"openEditDialog(element)\"\n                >\n                    <mat-icon\n                        aria-hidden=\"false\"\n                        aria-label=\"edit\"\n                        matTooltip=\"Редагування\"\n                    >\n                        edit\n                    </mat-icon>\n                </button>\n                <button\n                    class=\"operation-button\"\n                    mat-flat-button\n                    color=\"primary\"\n                    (click)=\"redirectToDelete(element)\"\n                >\n                    <mat-icon\n                        aria-hidden=\"false\"\n                        aria-label=\"delete\"\n                        matTooltip=\"Видалення\n                    \"\n                    >\n                        delete\n                    </mat-icon>\n                </button>\n                <button\n                    class=\"operation-button\"\n                    mat-flat-button\n                    color=\"primary\"\n                    (click)=\"openEIDialog(element)\"\n                >\n                    <mat-icon\n                        aria-hidden=\"false\"\n                        aria-label=\"delete\"\n                        matTooltip=\"Імпорт/експорт\n                    \"\n                    >\n                        import_export\n                    </mat-icon>\n                </button>\n                <button\n                    class=\"operation-button\"\n                    mat-flat-button\n                    color=\"primary\"\n                    (click)=\"redirectToTestDetail(element.test_id)\"\n                >\n                    <mat-icon\n                        aria-hidden=\"false\"\n                        aria-label=\"description\"\n                        matTooltip=\"Параметри теста\"\n                    >\n                        description\n                    </mat-icon>\n                </button>\n                <button\n                    class=\"operation-button\"\n                    mat-flat-button\n                    color=\"primary\"\n                    (click)=\"navigateToTestQuestions(element.test_id)\"\n                >\n                    <mat-icon\n                        aria-label=\"questions\"\n                        matTooltip=\"Питання до тесту\"\n                    >\n                        help_center\n                    </mat-icon>\n                </button>\n            </td>\n        </ng-container>\n        <tr mat-header-row *matHeaderRowDef=\"displayedColumns\"></tr>\n        <tr mat-row *matRowDef=\"let row; columns: displayedColumns\"></tr>\n\n        <tr class=\"mat-row\" *MatNoDataRow>\n            <td class=\"mat-cell\" colspan=\"4\">\n                No data matching the filter \"{{ input.value }}\"\n            </td>\n        </tr>\n    </table>\n    <mat-paginator [pageSizeOptions]=\"[5, 10, 15, 20, 25]\"></mat-paginator>\n</div>\n"],"sourceRoot":"webpack:///"}