{"version":3,"sources":["./src/app/modules/admin/groups/groups.component.ts","./src/app/modules/admin/groups/groups.component.html","./src/app/modules/admin/groups/groups.service.ts","./src/app/modules/admin/groups/group-dialog/group-dialog.component.ts","./src/app/modules/admin/groups/group-dialog/group-dialog.component.html","./src/app/modules/admin/groups/groups.module.ts"],"names":[],"mappings":"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","file":"groups-groups-module.js","sourcesContent":["import { Component, ViewChild, OnInit, AfterViewInit } from '@angular/core';\nimport { MatPaginator } from '@angular/material/paginator';\nimport { MatTableDataSource } from '@angular/material/table';\nimport { MatDialog } from '@angular/material/dialog';\nimport { MatSort } from '@angular/material/sort';\nimport { NavigationExtras, Router } from '@angular/router';\nimport { forkJoin, Subscription } from 'rxjs';\n\nimport { GroupsService } from './groups.service';\nimport { ConfirmDeleteComponent } from './confirm-delete/confirm-delete.component';\nimport { GroupDialogComponent } from './group-dialog/group-dialog.component';\nimport { GroupData, AddGroupData, ServiceResponse } from './groups.interfaces';\n\nlet ELEMENT_DATA: GroupData[];\n\n@Component({\n    selector: 'app-groups',\n    templateUrl: './groups.component.html',\n    styleUrls: ['./groups.component.scss'],\n})\nexport class GroupsComponent implements OnInit, AfterViewInit {\n    loading: boolean;\n    specialities: Array<{\n        speciality_id: string;\n        speciality_name: string;\n        speciality_code: string;\n    }>;\n    faculties: Array<{\n        faculty_id: string;\n        faculty_name: string;\n        faculty_code: string;\n    }>;\n    sharedData: any = [];\n    group_name: string;\n    speciality_name: string;\n    faculty_name: string;\n    group_id: string;\n\n    displayedColumns: string[] = [\n        'group_id',\n        'group_name',\n        'speciality_name',\n        'faculty_name',\n        'actions',\n    ];\n    dataSource = new MatTableDataSource<GroupData>(ELEMENT_DATA);\n    groupsSubscription: Subscription;\n\n    @ViewChild(MatPaginator, { static: false }) paginator: MatPaginator;\n    @ViewChild(MatSort, { static: false }) sort: MatSort;\n\n    res = [];\n\n    constructor(\n        private groupsSertvice: GroupsService,\n        public dialog: MatDialog,\n        private router: Router\n    ) {}\n\n    ngOnInit(): void {\n        this.loading = true;\n        this.getGroups();\n    }\n\n    ngAfterViewInit(): void {\n        this.paginator._intl.itemsPerPageLabel = 'Рядків у таблиці';\n        this.dataSource.paginator = this.paginator;\n        this.dataSource.sort = this.sort;\n    }\n\n    private getGroups(): void {\n        this.groupsSubscription = forkJoin({\n            groups: this.groupsSertvice.getData('Group'),\n            faculties: this.groupsSertvice.getData('Faculty'),\n            specialities: this.groupsSertvice.getData('Speciality'),\n        }).subscribe((res: ServiceResponse) => {\n            this.specialities = res.specialities;\n            this.faculties = res.faculties;\n            const newData = this.genereteTableData(res.groups);\n            this.sharedData.push(this.specialities, this.faculties);\n            this.dataSource = new MatTableDataSource<GroupData>(newData);\n            this.sharedData\n                ? this.groupsSertvice.saveData(this.sharedData)\n                : false;\n            this.dataSource.paginator = this.paginator;\n            this.dataSource.sort = this.sort;\n        });\n        this.loading = false;\n        this.groupsSertvice.snackBarOpen('Групи завантажено');\n    }\n\n    changeGroup(group?: GroupData): void {\n        group ? this.editGroupModal(group) : this.addGroupModal();\n    }\n\n    delCurrGroup(group: GroupData): void {\n        const dialogRef = this.dialog.open(ConfirmDeleteComponent, {\n            width: '300px',\n            data: {\n                group_name: group.group_name,\n            },\n        });\n        dialogRef.afterClosed().subscribe((result: boolean) => {\n            if (result) {\n                this.delGroup(group.group_id);\n            } else {\n                this.dataSource.paginator = this.paginator;\n                this.dataSource.sort = this.sort;\n            }\n        });\n    }\n\n    addGroup(group: AddGroupData) {\n        this.groupsSubscription = this.groupsSertvice\n            .insertData('Group', group)\n            .subscribe(\n                (result: GroupData) => {\n                    result = {\n                        ...result[0],\n                        speciality_name: this.getSpecParam(\n                            result[0].speciality_id,\n                            'speciality_id'\n                        ),\n                        faculty_name: this.getFacParam(\n                            result[0].faculty_id,\n                            'faculty_id'\n                        ),\n                    };\n                    this.dataSource.data = this.dataSource.data.concat(result);\n                    this.dataSource.paginator.lastPage();\n                    this.dataSource.sort = this.sort;\n                    this.groupsSertvice.snackBarOpen('Групу додано');\n                },\n                (error) => {\n                    this.groupsSertvice.snackBarOpen(\n                        'Можливо така група вже існує'\n                    );\n                    this.loading = false;\n                }\n            );\n    }\n\n    editGroup(id: string, group) {\n        this.groupsSubscription = this.groupsSertvice\n            .updateData('Group', id, group)\n            .subscribe(\n                (res) => {\n                    const newSourse = this.dataSource.data.map((item) => {\n                        if (item.group_id === id) {\n                            return (item = {\n                                ...res[0],\n                                speciality_name: this.getSpecParam(\n                                    res[0].speciality_id,\n                                    'speciality_id'\n                                ),\n                                faculty_name: this.getFacParam(\n                                    res[0].faculty_id,\n                                    'faculty_id'\n                                ),\n                            });\n                        } else {\n                            return item;\n                        }\n                    });\n                    this.dataSource.data = newSourse;\n                    this.groupsSertvice.snackBarOpen('Групу відредаговано');\n                },\n                (error) => {\n                    this.groupsSertvice.snackBarOpen(\n                        'Можливо така група вже існує'\n                    );\n                }\n            );\n    }\n\n    getSpecParam(param: string, field: string) {\n        if (field === 'speciality_name') {\n            const currentSpec = this.specialities.filter(\n                (item) => item.speciality_name === param\n            );\n            return currentSpec[0].speciality_id;\n        } else {\n            const currentSpec = this.specialities.filter(\n                (item) => item.speciality_id === param\n            );\n            return currentSpec[0].speciality_name;\n        }\n    }\n\n    getFacParam(param: string, field: string) {\n        if (field === 'faculty_name') {\n            const currentSpec = this.faculties.filter(\n                (item) => item.faculty_name === param\n            );\n            return currentSpec[0].faculty_id;\n        } else {\n            const currentSpec = this.faculties.filter(\n                (item) => item.faculty_id === param\n            );\n            return currentSpec[0].faculty_name;\n        }\n    }\n\n    delGroup(id: string) {\n        this.groupsSubscription = this.groupsSertvice\n            .delData('Group', id)\n            .subscribe(\n                () => {\n                    this.dataSource.data = this.dataSource.data.filter(\n                        (item) => item.group_id !== id\n                    );\n                    this.groupsSertvice.snackBarOpen('Групу видалено');\n                    this.dataSource.data = this.dataSource.data;\n                },\n                () => {\n                    this.groupsSertvice.snackBarOpen(\n                        'Спочатку видаліть студентів'\n                    );\n                }\n            );\n    }\n\n    applyFilter(event: Event) {\n        const filterValue = (event.target as HTMLInputElement).value;\n        this.dataSource.filter = filterValue.trim().toLowerCase();\n    }\n\n    goToStudents(id: string, groupName: string): void {\n        const navigationExtras: NavigationExtras = {\n            state: {\n                groupName: groupName,\n                id: id,\n            },\n        };\n        this.router.navigate(['admin/group/students/'], navigationExtras);\n    }\n\n    genereteTableData(data: Array<GroupData>) {\n        const newData = data;\n        newData.map((item) => {\n            this.specialities.map((elem) => {\n                if (item.speciality_id === elem.speciality_id) {\n                    item.speciality_name = elem.speciality_name;\n                }\n            });\n            this.faculties.map((elem) => {\n                if (item.faculty_id === elem.faculty_id) {\n                    item.faculty_name = elem.faculty_name;\n                }\n            });\n        });\n        return newData;\n    }\n\n    editGroupModal(group: GroupData) {\n        const dialogRef = this.dialog.open(GroupDialogComponent, {\n            width: '300px',\n            data: {\n                group_id: group.group_id,\n                group_name: group.group_name,\n                speciality_name: group.speciality_name,\n                faculty_name: group.faculty_name,\n                type: 'edit',\n            },\n        });\n        dialogRef.afterClosed().subscribe((result: GroupData) => {\n            if (result) {\n                this.editGroup(group.group_id, {\n                    group_name: result.group_name,\n                    speciality_id: this.getSpecParam(\n                        result.speciality_name,\n                        'speciality_name'\n                    ),\n                    faculty_id: this.getFacParam(\n                        result.faculty_name,\n                        'faculty_name'\n                    ),\n                });\n            }\n        });\n    }\n\n    addGroupModal() {\n        const dialogRef = this.dialog.open(GroupDialogComponent, {\n            width: '300px',\n            data: {\n                type: 'add',\n            },\n        });\n        dialogRef.afterClosed().subscribe((result: GroupData) => {\n            if (result) {\n                this.addGroup({\n                    group_name: result.group_name,\n                    speciality_id: this.getSpecParam(\n                        result.speciality_name,\n                        'speciality_name'\n                    ),\n                    faculty_id: this.getFacParam(\n                        result.faculty_name,\n                        'faculty_name'\n                    ),\n                });\n            }\n        });\n    }\n    ngOnDestroy(): void {\n        if (this.groupsSubscription) {\n            this.groupsSubscription.unsubscribe();\n        }\n    }\n}\n","<div class=\"entity-header\">\n    <h1 class=\"mat-h1 entity-title\">\n        <mat-icon class=\"admins-title-icon\">groups </mat-icon>Групи і студенти\n    </h1>\n    <button mat-raised-button color=\"primary\" (click)=\"changeGroup()\">\n        <mat-icon class=\"btn-icon\">add_circle</mat-icon>\n        Додати групу\n    </button>\n</div>\n\n<mat-form-field\n    [class.hide]=\"loading || !dataSource.data.length\"\n    class=\"entity-table-filter filter\"\n>\n    <mat-label class=\"entity-search-label\">\n        <mat-icon class=\"entity-search-icon\">person_search</mat-icon>\n        Пошук\n    </mat-label>\n    <input\n        matInput\n        (keyup)=\"applyFilter($event)\"\n        placeholder=\"Здійснюйте фільтрацію по всіх колонках таблиці\"\n        #input\n    />\n</mat-form-field>\n<div class=\"mat-elevation-z8 entity-table\" *ngIf=\"!loading; else spinner\">\n    <table #table mat-table [dataSource]=\"dataSource\" matSort>\n        <ng-container matColumnDef=\"group_id\">\n            <th mat-header-cell *matHeaderCellDef mat-sort-header>No.</th>\n            <td mat-cell *matCellDef=\"let element\">\n                {{ element.group_id }}\n            </td>\n        </ng-container>\n        <ng-container matColumnDef=\"group_name\">\n            <th mat-header-cell *matHeaderCellDef mat-sort-header>\n                Шифр групи\n            </th>\n            <td mat-cell *matCellDef=\"let element\">\n                {{ element.group_name }}\n            </td>\n        </ng-container>\n\n        <ng-container matColumnDef=\"faculty_name\">\n            <th mat-header-cell *matHeaderCellDef mat-sort-header>Факультет</th>\n            <td mat-cell *matCellDef=\"let element\">\n                {{ element.faculty_name }}\n            </td>\n        </ng-container>\n\n        <ng-container matColumnDef=\"speciality_name\">\n            <th mat-header-cell *matHeaderCellDef mat-sort-header>\n                Cпеціальність\n            </th>\n            <td mat-cell *matCellDef=\"let element\">\n                {{ element.speciality_name }}\n            </td>\n        </ng-container>\n\n        <ng-container matColumnDef=\"actions\">\n            <th mat-header-cell *matHeaderCellDef>Дії</th>\n            <td mat-cell *matCellDef=\"let group\">\n                <button\n                    class=\"operation-button\"\n                    mat-flat-button\n                    color=\"primary\"\n                    (click)=\"goToStudents(group.group_id, group.group_name)\"\n                >\n                    <mat-icon\n                        aria-hidden=\"false\"\n                        aria-label=\"supervisor_account\"\n                        matTooltip=\"Список студентів\"\n                        >supervisor_account</mat-icon\n                    >\n                </button>\n                <button\n                    class=\"operation-button\"\n                    mat-flat-button\n                    color=\"primary\"\n                    (click)=\"changeGroup(group)\"\n                >\n                    <mat-icon\n                        aria-hidden=\"false\"\n                        aria-label=\"edit\"\n                        matTooltip=\"Редагувати групу\"\n                        >edit</mat-icon\n                    >\n                </button>\n                <button\n                    class=\"operation-button\"\n                    mat-flat-button\n                    color=\"primary\"\n                    (click)=\"delCurrGroup(group)\"\n                >\n                    <mat-icon\n                        aria-hidden=\"false\"\n                        aria-label=\"delete\"\n                        matTooltip=\"Видалити групу\"\n                        >delete</mat-icon\n                    >\n                </button>\n            </td>\n        </ng-container>\n\n        <tr mat-header-row *matHeaderRowDef=\"displayedColumns\"></tr>\n        <tr mat-row *matRowDef=\"let row; columns: displayedColumns\"></tr>\n        <tr class=\"mat-row\" *matNoDataRow>\n            <td class=\"mat-cell\" colspan=\"4\">\n                Нічого не знайдено за заданим фільтром \"{{ input.value }}\"\n            </td>\n        </tr>\n    </table>\n    <mat-paginator\n        [pageSizeOptions]=\"[5, 10, 15, 20, 25]\"\n        showFirstLastButtons\n    ></mat-paginator>\n</div>\n<ng-template #spinner>\n    <app-loader></app-loader>\n</ng-template>\n","import { Injectable } from '@angular/core';\nimport { HttpClient } from '@angular/common/http';\nimport { environment } from 'src/environments/environment';\nimport { MatSnackBar } from '@angular/material/snack-bar';\nimport { Observable } from 'rxjs';\n\n@Injectable({\n    providedIn: 'root',\n})\nexport class GroupsService {\n    sharingData = [];\n\n    constructor(private http: HttpClient, private snackBar: MatSnackBar) {}\n    public saveData(data: any) {\n        this.sharingData.push(data);\n    }\n    public getsharedData() {\n        return this.sharingData;\n    }\n    public logIn() {\n        return this.http.post(`${environment.BASEURL}/Login/index`, {\n            username: 'admin',\n            password: 'dtapi_admin',\n        });\n    }\n    public getData(entity, id?): Observable<any> {\n        return this.http.get(\n            `${environment.BASEURL}${entity}/getRecords/${id ? id : ''}`\n        );\n    }\n    public delData(entity, id?): Observable<any> {\n        return this.http.get(\n            `${environment.BASEURL}${entity}/del/${id ? id : ''}`\n        );\n    }\n    public insertData(entity, payload): Observable<any> {\n        return this.http.post(\n            `${environment.BASEURL}${entity}/insertData`,\n            payload\n        );\n    }\n    public updateData(entity, id, payload): Observable<any> {\n        return this.http.post(\n            `${environment.BASEURL}${entity}/update/${id}`,\n            payload\n        );\n    }\n    public snackBarOpen(payload: string): any {\n        return this.snackBar.open(payload, '', {\n            duration: 1500,\n        });\n    }\n}\n","import { Component, OnInit, Inject } from '@angular/core';\nimport { MatDialogRef, MAT_DIALOG_DATA } from '@angular/material/dialog';\nimport { FormBuilder, FormGroup, Validators } from '@angular/forms';\n\nimport { GroupsService } from '../groups.service';\n\nexport interface DialogData {\n    group_id: string;\n    group_name: string;\n    speciality_name: string;\n    faculty_name: string;\n    type: string;\n}\n\n@Component({\n    selector: 'app-group-dialog',\n    templateUrl: './group-dialog.component.html',\n    styleUrls: ['./group-dialog.component.scss'],\n})\nexport class GroupDialogComponent implements OnInit {\n    sharedInfo: any = [];\n    specialities: [];\n    faculties: [];\n    groupInfo: [];\n    title: string;\n    form: FormGroup;\n\n    constructor(\n        private formBuilder: FormBuilder,\n        private groupsSertvice: GroupsService,\n        public dialogRef: MatDialogRef<GroupDialogComponent>,\n        @Inject(MAT_DIALOG_DATA) public data: DialogData\n    ) {}\n\n    ngOnInit() {\n        if (this.data.type === 'add') {\n            this.title = 'Додати групу';\n        } else {\n            this.title = 'Редагувати групу';\n        }\n        this.sharedInfo = this.groupsSertvice.getsharedData();\n        this.specialities = this.sharedInfo[0][0];\n        this.faculties = this.sharedInfo[0][1];\n        this.groupsSertvice.getData('Group', this.data.group_id);\n        this.form = this.formBuilder.group({\n            group_name: [\n                this.data ? this.data.group_name : '',\n                [\n                    Validators.required,\n                    Validators.pattern(\n                        '[А-Я\\u0406]{1,4}[мз]?-[0-9]{2}-[0-9]{1}[к]?'\n                    ),\n                ],\n            ],\n            speciality_name: [\n                this.data ? this.data.speciality_name : '',\n                [Validators.required],\n            ],\n            faculty_name: [\n                this.data ? this.data.faculty_name : '',\n                [Validators.required],\n            ],\n        });\n    }\n    addGroup() {\n        this.dialogRef.close(this.form.value);\n    }\n    onNoClick(): void {\n        this.dialogRef.close();\n    }\n}\n","<form [formGroup]=\"form\" (ngSubmit)=\"addGroup()\">\n    <h1 mat-dialog-title>{{ title }}</h1>\n    <div mat-dialog-content>\n        <mat-form-field>\n            <mat-label>Group name</mat-label>\n            <input matInput formControlName=\"group_name\" />\n\n            <mat-error\n                class=\"validation\"\n                *ngIf=\"\n                    form.get('group_name').invalid &&\n                    form.get('group_name').touched\n                \"\n                >Це поле є обов'язковим</mat-error\n            >\n        </mat-form-field>\n\n        <mat-form-field>\n            <mat-label>Speciality name</mat-label>\n            <mat-select formControlName=\"speciality_name\">\n                <mat-option\n                    *ngFor=\"let item of specialities\"\n                    [value]=\"item.speciality_name\"\n                    >{{ item.speciality_name }}</mat-option\n                >\n            </mat-select>\n            <mat-error\n                class=\"validation\"\n                *ngIf=\"\n                    form.get('speciality_name').invalid &&\n                    form.get('speciality_name').touched\n                \"\n                >Це поле є обов'язковим</mat-error\n            >\n        </mat-form-field>\n\n        <mat-form-field>\n            <mat-label>Faculty name</mat-label>\n            <mat-select formControlName=\"faculty_name\">\n                <mat-option\n                    *ngFor=\"let item of faculties\"\n                    [value]=\"item.faculty_name\"\n                    >{{ item.faculty_name }}</mat-option\n                >\n            </mat-select>\n            <mat-error\n                class=\"validation\"\n                *ngIf=\"\n                    form.get('faculty_name').invalid &&\n                    form.get('faculty_name').touched\n                \"\n                >Це поле є обов'язковим</mat-error\n            >\n        </mat-form-field>\n    </div>\n    <div mat-dialog-actions>\n        <button mat-button type=\"button\" (click)=\"onNoClick()\">\n            Відмінити\n        </button>\n        <button mat-button type=\"submit\" [disabled]=\"form.invalid\">Ок</button>\n    </div>\n</form>\n","import { NgModule } from '@angular/core';\nimport { RouterModule, Routes } from '@angular/router';\nimport { CommonModule } from '@angular/common';\nimport { SharedModule } from '../../../shared/modules/shared.module';\n\nimport { GroupsComponent } from './groups.component';\nimport { ConfirmDeleteComponent } from './confirm-delete/confirm-delete.component';\nimport { GroupDialogComponent } from './group-dialog/group-dialog.component';\n\nconst routes: Routes = [{ path: '', component: GroupsComponent }];\n\n@NgModule({\n    declarations: [\n        GroupsComponent,\n        ConfirmDeleteComponent,\n        GroupDialogComponent,\n    ],\n    imports: [CommonModule, SharedModule, RouterModule.forChild(routes)],\n})\nexport class GroupsModule {}\n"],"sourceRoot":"webpack:///"}