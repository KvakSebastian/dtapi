{"version":3,"sources":["./src/app/modules/login/login.component.ts","./src/app/modules/login/login.component.html","./src/app/modules/login/login.module.ts"],"names":[],"mappings":"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","file":"modules-login-login-module.js","sourcesContent":["import { Component, OnInit } from '@angular/core';\nimport { NavigationExtras, Router } from '@angular/router';\nimport { FormBuilder, FormGroup } from '@angular/forms';\n\nimport { ModalService } from '../../shared/services/modal.service';\nimport { AuthService } from './auth.service';\nimport { Logged, Logo, Login } from '../../shared/interfaces/auth.interfaces';\nimport { Response } from '../../shared/interfaces/entity.interfaces';\n\n@Component({\n    selector: 'app-login',\n    templateUrl: './login.component.html',\n    styleUrls: ['./login.component.scss'],\n})\nexport class LoginComponent implements OnInit {\n    loginForm: FormGroup;\n    hide = true;\n    badRequest = false;\n    errorMessage: string;\n    logoSrc: string;\n\n    private userName: string;\n    private password: string;\n\n    constructor(\n        public modalService: ModalService,\n        private request: AuthService,\n        private router: Router,\n        private fb: FormBuilder\n    ) {}\n\n    ngOnInit(): void {\n        this.loginForm = this.fb.group({\n            userName: [''],\n            password: [''],\n        });\n        this.getLogo();\n    }\n\n    onSubmit(): void {\n        const formValue: Login = this.loginForm.value;\n        this.userName = formValue.userName;\n        this.password = formValue.password;\n        this.request.loginRequest(this.userName, this.password).subscribe({\n            next: (res: Logged) => {\n                const goTo = res.roles.includes('admin') ? 'admin' : 'student';\n                localStorage.setItem('role', goTo);\n                const navigationExtras: NavigationExtras = {\n                    state: { username: res.username, id: res.id },\n                };\n                this.router.navigate([goTo], navigationExtras);\n            },\n            error: (error: Response) => {\n                this.loginForm.reset();\n                this.handlerError(error);\n            },\n        });\n    }\n\n    handlerError(err: any): void {\n        if (err.error.response === 'Invalid login or password') {\n            this.modalService.showSnackBar('Неправильний логін або пароль');\n        }\n    }\n\n    getLogo(): void {\n        this.request.getLogo().subscribe((res: Logo) => {\n            this.logoSrc = res.logo;\n        });\n    }\n    fixOutlineStyle(input: any): void {\n        input.updateOutlineGap();\n    }\n}\n","<div class=\"container\">\n    <div *ngIf=\"logoSrc\" class=\"logo\">\n        <img src=\"{{ logoSrc }}\" alt=\"logo\" srcset=\"\" />\n    </div>\n    <div class=\"form-wrap\">\n        <p class=\"form-title\">Авторизація</p>\n        <form [formGroup]=\"loginForm\" novalidate (submit)=\"onSubmit()\">\n            <mat-form-field\n                class=\"form-field\"\n                appearance=\"outline\"\n                #outlineFieldRef\n            >\n                <mat-label> Логін </mat-label>\n                <input\n                    (focus)=\"fixOutlineStyle(outlineFieldRef)\"\n                    formControlName=\"userName\"\n                    name=\"username\"\n                    matInput\n                    type=\"text\"\n                    required\n                />\n                <span matPrefix class=\"material-icons\"> login </span>\n                <!-- <span *ngIf=\"userName.errors?.forbiddenValidator\">Такого логіна немає в системі</span> -->\n            </mat-form-field>\n            <mat-form-field\n                class=\"form-field\"\n                appearance=\"outline\"\n                #outlineFieldPas\n            >\n                <mat-label> Пароль </mat-label>\n                <input\n                    (focus)=\"fixOutlineStyle(outlineFieldPas)\"\n                    name=\"password\"\n                    minlength=\"8\"\n                    formControlName=\"password\"\n                    matInput\n                    [type]=\"hide ? 'password' : 'text'\"\n                    required\n                />\n                <span matPrefix class=\"material-icons\"> vpn_key </span>\n                <span\n                    class=\"form-showPassword\"\n                    mat-icon-button\n                    matSuffix\n                    (click)=\"hide = !hide\"\n                    [attr.aria-label]=\"'Hide password'\"\n                    [attr.aria-pressed]=\"hide\"\n                >\n                    <mat-icon\n                        >{{ hide ? 'visibility_off' : 'visibility' }}\n                    </mat-icon>\n                </span>\n                <mat-hint>Пароль повинен містити не меше 8 символів </mat-hint>\n            </mat-form-field>\n            <button\n                mat-raised-button\n                color=\"primary\"\n                type=\"submit\"\n                [disabled]=\"loginForm.invalid\"\n            >\n                Вхід\n            </button>\n        </form>\n    </div>\n    <div class=\"form-request-error\" *ngIf=\"badRequest\" [@inOutAnimation]>\n        <p>{{ errorMessage }}</p>\n    </div>\n</div>\n","import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { RouterModule } from '@angular/router';\n\nimport { LoginComponent } from './login.component';\nimport { SharedModule } from '../../shared/modules/shared.module';\n\n@NgModule({\n    declarations: [LoginComponent],\n    imports: [\n        CommonModule,\n        SharedModule,\n        RouterModule.forChild([{ path: '', component: LoginComponent }]),\n    ],\n    exports: [LoginComponent],\n})\nexport class LoginModule {}\n"],"sourceRoot":"webpack:///"}