{"version":3,"sources":["./src/app/modules/admin/answers/validators/minMaxValidator.ts","./src/app/modules/admin/answers/answers.component.ts","./src/app/modules/admin/answers/answers.component.html","./src/app/modules/admin/answers/answers.module.ts"],"names":[],"mappings":"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","file":"answers-answers-module.js","sourcesContent":["import { FormGroup, ValidationErrors } from '@angular/forms';\n\nexport function minMaxValidator(group: FormGroup): ValidationErrors {\n    const minValue: number = group.get('numericAnswerMin').value;\n    const maxValue: number = group.get('numericAnswerMax').value;\n\n    return minValue >= maxValue\n        ? {\n              comparisonError: true,\n          }\n        : null;\n}\n","import { Component, OnInit, ViewEncapsulation } from '@angular/core';\nimport { FormArray, FormBuilder, FormGroup, Validators } from '@angular/forms';\nimport { ActivatedRoute, Router } from '@angular/router';\nimport { Observable, Observer, Subscription } from 'rxjs';\n\nimport { ConfirmComponent } from '../../../shared/components/confirm/confirm.component';\nimport { ModalService } from '../../../shared/services/modal.service';\nimport { AlertComponent } from '../../../shared/components/alert/alert.component';\nimport {\n    AnswerData,\n    QuestionData,\n    Response,\n    AnswerType,\n} from './answersInterfaces';\nimport { AnswersService } from './answers.service';\nimport { minMaxValidator } from './validators/minMaxValidator';\n\n@Component({\n    selector: 'app-answers',\n    templateUrl: './answers.component.html',\n    styleUrls: ['./answers.component.scss'],\n    encapsulation: ViewEncapsulation.None,\n})\nexport class AnswersComponent implements OnInit {\n    allSubscription: Subscription;\n    confirmIcon = 'question_answer';\n    answerAtachmentSrc: string[] = [];\n    noChanges = false;\n    updateAnswers: AnswerData[];\n    alert = {\n        titleAlert: 'Повідомлення',\n        titleError: 'Помилка',\n        messageNoAnswer: 'Питання повинне містити відповіді',\n        messageNumCompare:\n            'Мінімальне значення не може бути більше або рівне макcимального',\n        messageNoEdit: 'Для редагування внесіть зміни в форму',\n        messageNoTruAnswer: 'Відсутня правильна відповідь',\n        messageAnswerUpdate: 'Відповідь оновлена',\n        messageAnswerCreate: 'Відповідь створена',\n        messageAnswerDelete: 'Відповідь видалена',\n        messageQuestionCreate: 'Питання створено',\n        messageQuestionUpdate: 'Питання оновлено',\n        messageConfirm: 'Ви впевнені що бажаєте видалити цю відповідь?',\n        messageNoAnswerTitle: \"Заповніть усі обов'язкові поля\",\n    };\n    errorQuestionTitle = \"Це поле обов'язкове\";\n    showAtachmentAnswer = false;\n    answerAttachmentArr: string[];\n    noAnswers = false;\n    idAnswerArray: string[] = [];\n    createMode = true;\n    attachmentQuestionSrc: string;\n    state: QuestionData;\n    testId: string;\n    questionId: string;\n    sendAnswerData: AnswerData[] = [];\n    sendQuestionData: QuestionData;\n    answerForm: FormGroup;\n    showAnswers = false;\n    showAnswersNumeric = false;\n    levelType = [...Array(20).keys()];\n    questionType: string[] = [\n        'Простий вибір',\n        'Мульти вибір',\n        'Текстове поле',\n        'Числовий діапазон',\n    ];\n    constructor(\n        private activatedRoute: ActivatedRoute,\n        private router: Router,\n        private fb: FormBuilder,\n        private answerServise: AnswersService,\n        public modalService: ModalService\n    ) {}\n    formInitialazer() {\n        this.answerForm = this.fb.group({\n            questionText: [\n                this.state ? this.state.question_text : '',\n                Validators.required,\n            ],\n            typeOfQuestion: [this.state ? this.state.type : '1'],\n            level: [this.state ? this.state.level : '1'],\n            atachmentQuestion: [this.state ? this.state.attachment : ''],\n            answersType: this.fb.array([]),\n            answersTypeNumeric: this.fb.group(\n                {\n                    numericAnswerMin: ['', Validators.required],\n                    numericAnswerMax: ['', Validators.required],\n                    answer_idMin: [''],\n                    answer_idMax: [''],\n                },\n                {\n                    validators: [minMaxValidator],\n                }\n            ),\n        });\n    }\n    newAnswersType(item?: AnswerData, trueAnswer?: string): FormGroup {\n        return this.fb.group({\n            text: [item ? item.answer_text : '', Validators.required],\n            trueAnswerSimple: [\n                trueAnswer === '1' ? true : false,\n                Validators.required,\n            ],\n            trueAnswerMulti: [\n                trueAnswer === '1' ? true : false,\n                Validators.required,\n            ],\n            atachmentAnswer: [item ? item.attachment : ''],\n            answer_id: [item ? item.answer_id : ''],\n        });\n    }\n    get level() {\n        const levelValue = this.answerForm.get('level').value;\n        return levelValue;\n    }\n    get typeOfQuestion() {\n        const typeOfQuestionValue = this.answerForm.get('typeOfQuestion').value;\n        return typeOfQuestionValue;\n    }\n    get questionText() {\n        const questionTextValue = this.answerForm.get('questionText').value;\n        return questionTextValue;\n    }\n    get answersType(): FormArray {\n        return this.answerForm.get('answersType') as FormArray;\n    }\n    get answersTypeNumeric() {\n        return this.answerForm.get('answersTypeNumeric');\n    }\n    get atachmentQuestion() {\n        return this.answerForm.get('atachmentQuestion');\n    }\n    get trueAnswer() {\n        return this.answerForm.controls.answersType;\n    }\n    ngOnInit(): void {\n        let mode: string;\n        this.activatedRoute.queryParams.subscribe((params) => {\n            this.testId = params.test_id;\n            mode = params.mode;\n        });\n        if (mode === 'edit') {\n            this.state = history.state.data;\n            this.checkState(mode);\n        }\n        this.formInitialazer();\n    }\n    checkState(mode: string): void {\n        if (this.state) {\n            const localState = this.state;\n            localStorage.setItem(\n                'state',\n                JSON.stringify({\n                    localState,\n                })\n            );\n        }\n        if (mode === 'edit' && !this.state) {\n            const data = JSON.parse(localStorage.getItem('state'));\n            this.state = data.localState;\n        }\n        this.state.test_id = this.testId;\n        switch (this.state.type) {\n            case 'Простий вибір':\n                this.state.type = '1';\n                break;\n            case 'Мульти вибір':\n                this.state.type = '2';\n                break;\n            case '\tТекстове поле':\n                this.state.type = '3';\n                break;\n            case 'Числове поле вводу':\n                this.state.type = '4';\n                break;\n            default:\n                break;\n        }\n        this.initializeEditMode();\n    }\n    //update question and answer part\n    initializeEditMode(): void {\n        this.createMode = false;\n        this.questionId = this.state.question_id;\n        this.attachmentQuestionSrc = this.state.attachment;\n        this.allSubscription = this.answerServise\n            .getQuestions(this.questionId)\n            .subscribe((res: QuestionData) => {\n                if (res[0]) {\n                    this.state.attachment = res[0].attachment;\n                    this.attachmentQuestionSrc = res[0].attachment;\n                } else {\n                    this.state.attachment = '';\n                }\n                this.getAnswers();\n            });\n    }\n    getAnswers(): void {\n        this.answerServise\n            .getAnswers(this.state.question_id)\n            .subscribe((res: AnswerData[]) => {\n                this.answerForm.get('typeOfQuestion').disable();\n                if (!res[0]) {\n                    this.noAnswers = true;\n                    this.noChanges = true;\n                } else {\n                    this.updateAnswers = res;\n                    this.fillForm(res);\n                }\n            });\n    }\n\n    fillForm(result: AnswerData[]): void {\n        this.showAnswers = true;\n        if (this.typeOfQuestion === '4') {\n            this.showAnswersNumeric = true;\n            result.map((item: AnswerData, index: number) => {\n                this.idAnswerArray.push(item.answer_id);\n                if (index === 0) {\n                    this.answerForm.controls.answersTypeNumeric\n                        .get('numericAnswerMin')\n                        .setValue(item.answer_text);\n                    this.answerForm.controls.answersTypeNumeric\n                        .get('answer_idMin')\n                        .setValue(item.answer_id);\n                } else {\n                    this.answerForm.controls.answersTypeNumeric\n                        .get('numericAnswerMax')\n                        .setValue(item.answer_text);\n                    this.answerForm.controls.answersTypeNumeric\n                        .get('answer_idMax')\n                        .setValue(item.answer_id);\n                }\n            });\n        } else {\n            result.map((item: AnswerData) => {\n                this.answerAtachmentSrc.push(item.attachment);\n                this.idAnswerArray.push(item.answer_id);\n                this.showAtachmentAnswer = item.attachment ? true : false;\n                const trueAnswer = item.true_answer;\n                this.answersType.push(this.newAnswersType(item, trueAnswer));\n            });\n        }\n    }\n    compareQuestions(): boolean {\n        if (this.createMode) {\n            return false;\n        }\n        return this.objectsAreSame(this.sendQuestionData, this.state);\n    }\n    removeImageQuestion(): void {\n        this.attachmentQuestionSrc = '';\n        this.answerForm.controls.atachmentQuestion.setValue('');\n    }\n    compareAnswers(): boolean {\n        if (this.noChanges) {\n            return false;\n        } else if (!this.createMode) {\n            if (this.sendAnswerData.length !== this.updateAnswers.length) {\n                return false;\n            }\n            return this.sendAnswerData\n                .map((elem, index) => {\n                    return this.objectsAreSame(elem, this.updateAnswers[index]);\n                })\n                .every((elem) => {\n                    return elem === true;\n                });\n        }\n    }\n    getIdOfUpdateAnswer(): void {\n        let chooseArr = 0;\n        if (this.sendAnswerData.length > this.updateAnswers.length) {\n            chooseArr = this.updateAnswers.length;\n        } else {\n            chooseArr = this.sendAnswerData.length;\n        }\n        this.idAnswerArray.slice(0, chooseArr);\n        const result = [];\n        for (let i = 0; i < this.idAnswerArray.length; i++) {\n            if (\n                this.objectsAreSame(\n                    this.sendAnswerData[i],\n                    this.updateAnswers[i]\n                ) === false\n            ) {\n                result.push(this.idAnswerArray[i]);\n            }\n        }\n        this.idAnswerArray = result;\n    }\n    removeImageAnswer(i: number): void {\n        this.answersType.controls[i].get('atachmentAnswer').setValue('');\n        this.answerAtachmentSrc[i] = '';\n    }\n    objectsAreSame(x, y): boolean {\n        let objectsAreSame = true;\n        for (const propertyName in x) {\n            if (x[propertyName] !== y[propertyName]) {\n                objectsAreSame = false;\n                break;\n            }\n        }\n        return objectsAreSame;\n    }\n\n    //create question part\n    createQuestionData(): void {\n        this.sendQuestionData = {\n            question_id: this.questionId,\n            question_text: this.questionText,\n            type: this.typeOfQuestion,\n            level: this.level,\n            test_id: this.testId,\n            attachment: this.atachmentQuestion.value\n                ? this.atachmentQuestion.value\n                : '',\n        };\n    }\n    inputQuestionAtachment(): void {\n        const atachment = this.answerForm.get('atachmentQuestion');\n        if (atachment.value._files[0]) {\n            this.getImageBase64(atachment.value._files[0]).subscribe((res) => {\n                atachment.setValue(res);\n                this.attachmentQuestionSrc = res;\n            });\n        } else {\n            atachment.setValue('');\n        }\n    }\n    createQuestion(): void {\n        if (this.createMode) {\n            this.answerServise\n                .createQuestionRequest(this.sendQuestionData)\n                .subscribe((res: QuestionData) => {\n                    this.openModal(\n                        this.alert.titleAlert,\n                        this.alert.messageQuestionCreate,\n                        AlertComponent\n                    );\n                    this.questionId = res[0].question_id;\n                    this.sendAnswerDataRequest();\n                    this.navigateToQuestionPage();\n                });\n        } else if (!this.compareQuestions()) {\n            this.answerServise\n                .updateQuestion(this.sendQuestionData, this.questionId)\n                .subscribe((res: QuestionData) => {\n                    if (this.questionId === res[0].question_id) {\n                        this.openModal(\n                            this.alert.titleAlert,\n                            this.alert.messageQuestionUpdate,\n                            AlertComponent\n                        );\n                    }\n                    this.sendAnswerDataRequest();\n                    this.navigateToQuestionPage();\n                });\n        } else {\n            this.sendAnswerDataRequest();\n            this.navigateToQuestionPage();\n        }\n    }\n\n    // create answer part\n\n    addAnswer(e: MouseEvent): void {\n        e.preventDefault();\n        this.noChanges = true;\n        this.noAnswers = false;\n        this.showAnswers = true;\n        this.answersType.push(this.newAnswersType());\n    }\n\n    removeAnswer(e: MouseEvent, index: number): void {\n        e.preventDefault();\n        const removeId = this.idAnswerArray[index];\n        if (!this.createMode && removeId) {\n            this.modalService.openModal(\n                ConfirmComponent,\n                {\n                    data: {\n                        icon: this.confirmIcon,\n                        message: this.alert.messageConfirm,\n                    },\n                },\n                (result) => {\n                    dialog(result);\n                }\n            );\n            const dialog = (res: boolean) => {\n                if (res) {\n                    this.allSubscription = this.answerServise\n                        .deleteAnswer(+removeId)\n                        .subscribe((res: Response) => {\n                            if (res.response === 'ok') {\n                                this.answersType.removeAt(index);\n                                this.idAnswerArray.splice(index, 1);\n                                this.openModal(\n                                    this.alert.titleAlert,\n                                    this.alert.messageAnswerDelete,\n                                    AlertComponent\n                                );\n                            }\n                        });\n                } else {\n                    return;\n                }\n            };\n        } else {\n            this.answersType.removeAt(index);\n        }\n    }\n    getTrueAnswer(item: AnswerType): string {\n        switch (this.typeOfQuestion) {\n            case '1':\n                if (item.trueAnswerSimple) {\n                    return '1';\n                } else {\n                    return '0';\n                }\n            case '2':\n                if (item.trueAnswerMulti) {\n                    return '1';\n                } else {\n                    return '0';\n                }\n            default:\n                return '1';\n        }\n    }\n    inputAnswerAtachment(index: number): void {\n        const atachment = this.answersType.controls[index].get(\n            'atachmentAnswer'\n        );\n        if (this.answersType.value[index].atachmentAnswer._files[0]) {\n            this.allSubscription = this.getImageBase64(\n                this.answersType.value[index].atachmentAnswer._files[0]\n            ).subscribe((res: string) => {\n                this.answerAtachmentSrc[index] = res;\n                atachment.setValue(res);\n            });\n        } else {\n            atachment.setValue('');\n        }\n    }\n    getImageBase64(file): Observable<any> {\n        const reader = new FileReader();\n        return new Observable((observer: Observer<any>) => {\n            reader.readAsDataURL(file);\n            reader.onloadend = () => {\n                observer.next(reader.result);\n                observer.complete();\n            };\n        });\n    }\n    isTrueAnswer(): boolean {\n        switch (this.typeOfQuestion) {\n            case '1':\n                return this.trueAnswer.value.every(\n                    (res: AnswerType) => res.trueAnswerSimple === false\n                );\n            case '2':\n                return this.trueAnswer.value.every(\n                    (res: AnswerType) => res.trueAnswerMulti === false\n                );\n            default:\n                return false;\n        }\n    }\n    createAnswerData(): void {\n        this.sendAnswerData = [];\n        const formFieldsValue = this.answerForm.value;\n        if (this.typeOfQuestion === '4') {\n            const typeQuestionNumeric = [\n                {\n                    answer_text:\n                        formFieldsValue.answersTypeNumeric.numericAnswerMin,\n\n                    answer_id: formFieldsValue.answersTypeNumeric.answer_idMin,\n                },\n                {\n                    answer_text:\n                        formFieldsValue.answersTypeNumeric.numericAnswerMax,\n                    answer_id: formFieldsValue.answersTypeNumeric.answer_idMax,\n                },\n            ];\n            for (let i = 0; i < typeQuestionNumeric.length; i++) {\n                const item = typeQuestionNumeric[i];\n                this.sendAnswerData.push({\n                    answer_id: item.answer_id,\n                    answer_text: `${item.answer_text}`,\n                    true_answer: '1',\n                    question_id: this.questionId,\n                    attachment: '',\n                });\n            }\n        } else {\n            formFieldsValue.answersType.map((item: AnswerType) => {\n                {\n                    this.sendAnswerData.push({\n                        answer_id: item.answer_id,\n                        question_id: this.questionId,\n                        true_answer: this.getTrueAnswer(item),\n                        answer_text: item.text,\n                        attachment: item.atachmentAnswer,\n                    });\n                }\n            });\n        }\n    }\n    changeTypeQuestion(): void {\n        switch (this.typeOfQuestion) {\n            case '4':\n                this.showAnswersNumeric = true;\n                this.showAnswers = false;\n                break;\n            default:\n                this.showAnswersNumeric = false;\n                this.showAnswers = true;\n                break;\n        }\n    }\n    trueAnswerSimpleOne(id: number): void {\n        this.answersType.value.map((elem: AnswerType, index: number) => {\n            if (id !== index) {\n                this.answersType.controls[index]\n                    .get('trueAnswerSimple')\n                    .setValue(false);\n            }\n        });\n    }\n\n    sendAnswerDataRequest(): void {\n        let counter: number = null;\n        if (this.createMode) {\n            this.createAnswerData();\n        }\n        if (!this.createMode && this.updateAnswers) {\n            this.getIdOfUpdateAnswer();\n        }\n        this.sendAnswerData.map((elem) => {\n            if (this.createMode || !elem.answer_id) {\n                delete elem.answer_id;\n                return (this.allSubscription = this.answerServise\n                    .createAnswerRequest(elem)\n                    .subscribe((res: AnswerData) => {\n                        if (res[0].answer_id && this.compareQuestions()) {\n                            counter = 0;\n                        }\n                    }));\n            } else if (this.idAnswerArray.includes(elem.answer_id)) {\n                return (this.allSubscription = this.answerServise\n                    .updateAnswer(elem, elem.answer_id)\n                    .subscribe((res) => {\n                        if (this.compareQuestions() && res) {\n                            counter = 1;\n                        }\n                    }));\n            }\n        });\n        this.showMessage(counter);\n    }\n    showMessage(counter: number) {\n        if (this.compareQuestions()) {\n            const message =\n                counter === 0\n                    ? this.alert.messageAnswerCreate\n                    : this.alert.messageAnswerUpdate;\n            this.openModal(this.alert.titleAlert, message, AlertComponent);\n        }\n    }\n    createQuestionAndAnswer(): void {\n        this.createAnswerData();\n        this.createQuestionData();\n        if (\n            (this.compareAnswers() && this.compareQuestions()) ||\n            (this.answersTypeNumeric.errors?.comparisonError &&\n                this.typeOfQuestion === '4')\n        ) {\n            let message = this.alert.messageNoAnswer;\n            if (\n                this.answersTypeNumeric.errors?.comparisonError &&\n                this.typeOfQuestion === '4'\n            ) {\n                message = this.alert.messageNumCompare;\n            } else if (this.compareAnswers() && this.compareQuestions()) {\n                message = this.alert.messageNoEdit;\n            }\n            this.openModal(this.alert.titleAlert, message, AlertComponent);\n            return;\n        } else if (\n            this.isTrueAnswer() ||\n            this.sendAnswerData.some((elem) => elem.answer_text === '')\n        ) {\n            this.openModal(\n                this.alert.titleError,\n                this.isTrueAnswer()\n                    ? this.alert.messageNoTruAnswer\n                    : this.alert.messageNoAnswerTitle,\n                AlertComponent\n            );\n            return;\n        } else {\n            this.createQuestion();\n        }\n    }\n    cancelButton(e: MouseEvent): void {\n        e.preventDefault();\n        this.navigateToQuestionPage();\n    }\n    navigateToQuestionPage(): void {\n        this.router.navigate(\n            [`admin/subjects/tests/${this.testId}/questions`],\n            {\n                queryParams: {\n                    test_id: this.testId,\n                },\n            }\n        );\n    }\n    openModal(title: string, message: string, component: any): void {\n        this.modalService.openModal(component, {\n            data: {\n                message,\n                title,\n            },\n        });\n    }\n}\n","<form [formGroup]=\"answerForm\" (submit)=\"createQuestionAndAnswer()\">\n    <div class=\"question-container\">\n        <h2>\n            {{\n                createMode\n                    ? 'Заповніть форму для створення питання та відповідей до нього'\n                    : 'Внесіть зміни для редагування'\n            }}\n        </h2>\n        <div class=\"question\">\n            <mat-form-field appearance=\"fill\">\n                <mat-label>Текст</mat-label>\n                <textarea formControlName=\"questionText\" matInput></textarea>\n                <mat-error *ngIf=\"answerForm.controls.questionText.invalid\"\n                    >{{ errorQuestionTitle }}\n                </mat-error>\n            </mat-form-field>\n        </div>\n        <mat-card *ngIf=\"attachmentQuestionSrc\">\n            <img\n                class=\"image\"\n                src=\"{{ attachmentQuestionSrc }}\"\n                alt=\"question picture\"\n            />\n            <span\n                class=\"material-icons close-btn\"\n                (click)=\"removeImageQuestion()\"\n            >\n                close\n            </span>\n        </mat-card>\n        <div>\n            <mat-form-field>\n                <ngx-mat-file-input\n                    (change)=\"inputQuestionAtachment()\"\n                    formControlName=\"atachmentQuestion\"\n                    placeholder=\"Додати зображення\"\n                    [accept]=\"'.png,.jpeg'\"\n                ></ngx-mat-file-input>\n                <mat-icon matSuffix>folder</mat-icon>\n            </mat-form-field>\n        </div>\n        <mat-form-field appearance=\"fill\">\n            <mat-label>Тип</mat-label>\n            <mat-select\n                formControlName=\"typeOfQuestion\"\n                (selectionChange)=\"changeTypeQuestion()\"\n            >\n                <mat-option\n                    *ngFor=\"let type of questionType; let i = index\"\n                    value=\"{{ i + 1 }}\"\n                >\n                    {{ type }}\n                </mat-option>\n            </mat-select>\n        </mat-form-field>\n        <mat-form-field appearance=\"fill\">\n            <mat-label>Рівень</mat-label>\n            <mat-select formControlName=\"level\">\n                <mat-option\n                    *ngFor=\"let level of levelType; let i = index\"\n                    value=\"{{ i + 1 }}\"\n                    >{{ i + 1 }}\n                </mat-option>\n            </mat-select>\n        </mat-form-field>\n    </div>\n    <div class=\"createAnswer\">\n        <div\n            formArrayName=\"answersType\"\n            *ngFor=\"let ans of answersType.controls; let i = index\"\n        >\n            <div [formGroupName]=\"i\">\n                <div *ngIf=\"showAnswers\" class=\"answer-container\">\n                    <button\n                        class=\"answer-number\"\n                        mat-mini-fab\n                        color=\"primary\"\n                        (click)=\"$event.preventDefault()\"\n                    >\n                        {{ i + 1 }}\n                    </button>\n                    <div class=\"addAnswerField\">\n                        <mat-checkbox\n                            *ngIf=\"typeOfQuestion === '2'\"\n                            class=\"example-margin\"\n                            formControlName=\"trueAnswerMulti\"\n                        ></mat-checkbox>\n                        <mat-checkbox\n                            *ngIf=\"typeOfQuestion === '1'\"\n                            id=\"{{ i }}\"\n                            class=\"radio-button\"\n                            formControlName=\"trueAnswerSimple\"\n                            (change)=\"trueAnswerSimpleOne(i)\"\n                        ></mat-checkbox>\n                        <mat-form-field>\n                            <mat-label>Введіть варіант відповіді</mat-label>\n                            <input formControlName=\"text\" matInput />\n                            <mat-error *ngIf=\"ans.controls.text.invalid\"\n                                >{{ errorQuestionTitle }}\n                            </mat-error>\n                        </mat-form-field>\n                        <button\n                            (click)=\"removeAnswer($event, i)\"\n                            mat-mini-fab\n                            color=\"primary\"\n                            aria-label=\"Example icon button with a delete icon\"\n                        >\n                            <mat-icon>delete</mat-icon>\n                        </button>\n                    </div>\n                    <mat-card *ngIf=\"answerAtachmentSrc[i]\">\n                        <img\n                            class=\"image\"\n                            src=\"{{ answerAtachmentSrc[i] }}\"\n                            alt=\"answer\"\n                        />\n                        <span\n                            class=\"material-icons close-btn\"\n                            (click)=\"removeImageAnswer(i)\"\n                        >\n                            close\n                        </span>\n                    </mat-card>\n                    <div>\n                        <mat-form-field>\n                            <ngx-mat-file-input\n                                (change)=\"inputAnswerAtachment(i)\"\n                                formControlName=\"atachmentAnswer\"\n                                placeholder=\"Додати зображення\"\n                                [accept]=\"'.png,.jpeg'\"\n                            ></ngx-mat-file-input>\n                            <mat-icon matSuffix>folder</mat-icon>\n                        </mat-form-field>\n                    </div>\n                </div>\n            </div>\n        </div>\n        <div *ngIf=\"noAnswers\">Відповіді відсутні</div>\n        <div\n            *ngIf=\"showAnswersNumeric\"\n            formGroupName=\"answersTypeNumeric\"\n            class=\"answer-container\"\n        >\n            <mat-form-field>\n                <input\n                    formControlName=\"numericAnswerMin\"\n                    matInput\n                    type=\"number\"\n                />\n                <mat-hint>Мінімальне числове значення діапазону</mat-hint>\n                <mat-error\n                    *ngIf=\"answersTypeNumeric.controls.numericAnswerMin.invalid\"\n                    >{{ errorQuestionTitle }}</mat-error\n                >\n            </mat-form-field>\n            <mat-form-field>\n                <input\n                    formControlName=\"numericAnswerMax\"\n                    matInput\n                    type=\"number\"\n                />\n                <mat-hint>Максимальне числове значення діапазону </mat-hint>\n                <mat-error\n                    *ngIf=\"answersTypeNumeric.controls.numericAnswerMin.invalid\"\n                    >{{ errorQuestionTitle }}</mat-error\n                >\n            </mat-form-field>\n        </div>\n        <div class=\"create-btn\">\n            <button\n                [disabled]=\"showAnswersNumeric\"\n                class=\"create-answer-btn\"\n                mat-raised-button\n                color=\"primary\"\n                (click)=\"addAnswer($event)\"\n            >\n                Створити відповідь\n            </button>\n        </div>\n\n        <div\n            сlass=\"btn-group\"\n            style=\"display: flex; justify-content: space-between\"\n        >\n            <div>\n                <button\n                    mat-raised-button\n                    color=\"primary\"\n                    [disabled]=\"answerForm.controls.questionText.invalid\"\n                >\n                    {{ createMode ? 'Зберегти' : 'Редагувати' }}\n                </button>\n            </div>\n            <div>\n                <button\n                    mat-raised-button\n                    color=\"primary\"\n                    (click)=\"cancelButton($event)\"\n                >\n                    Скасувати\n                </button>\n            </div>\n        </div>\n    </div>\n</form>\n","import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { RouterModule, Routes } from '@angular/router';\nimport { MaterialFileInputModule } from 'ngx-material-file-input';\n\nimport { SharedModule } from 'src/app/shared/modules/shared.module';\nimport { AnswersComponent } from './answers.component';\n\nconst routes: Routes = [{ path: '', component: AnswersComponent }];\n@NgModule({\n    declarations: [AnswersComponent],\n    imports: [\n        CommonModule,\n        SharedModule,\n        MaterialFileInputModule,\n        RouterModule.forChild(routes),\n    ],\n})\nexport class AnswersModule {}\n"],"sourceRoot":"webpack:///"}