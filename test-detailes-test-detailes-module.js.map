{"version":3,"sources":["./src/app/modules/admin/test-detailes/test-detailes.component.ts","./src/app/modules/admin/test-detailes/test-detailes.component.html","./src/app/modules/admin/test-detailes/test-detailes.module.ts","./src/app/modules/admin/test-detailes/test-details-dialog/test-details-dialog.component.ts","./src/app/modules/admin/test-detailes/test-details-dialog/test-details-dialog.component.html"],"names":[],"mappings":"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","file":"test-detailes-test-detailes-module.js","sourcesContent":["import { Component, ViewChild, OnInit, AfterViewInit } from '@angular/core';\nimport { Subscription } from 'rxjs';\nimport { ActivatedRoute } from '@angular/router';\n\nimport { TestService } from '../test/services/test.service';\nimport { ModalService } from 'src/app/shared/services/modal.service';\nimport { TestDetails, TestRate } from './test-detailes.interfaces';\n\nimport { MatPaginator } from '@angular/material/paginator';\nimport { MatTableDataSource, MatTable } from '@angular/material/table';\nimport { MatSort } from '@angular/material/sort';\nimport { MatDialog } from '@angular/material/dialog';\nimport { TestDetailsDialogComponent } from './test-details-dialog/test-details-dialog.component';\nimport { ConfirmDeleteComponent } from '../groups/confirm-delete/confirm-delete.component';\n\n@Component({\n    selector: 'app-test-detailes',\n    templateUrl: './test-detailes.component.html',\n    styleUrls: ['./test-detailes.component.scss'],\n})\nexport class TestDetailesComponent implements OnInit, AfterViewInit {\n    tests: TestDetails[] = [];\n    test_id: number;\n    testRate: string;\n    levels: number[];\n    displayedColumns: string[] = ['id', 'level', 'tasks', 'rate', 'actions'];\n\n    dataSource = new MatTableDataSource<TestDetails>();\n    testDetailesSubscription: Subscription;\n\n    @ViewChild('table', { static: true }) table: MatTable<TestDetails>;\n    @ViewChild(MatPaginator, { static: true }) paginator: MatPaginator;\n    @ViewChild(MatSort, { static: true }) sort: MatSort;\n\n    constructor(\n        private testService: TestService,\n        private modalService: ModalService,\n        private route: ActivatedRoute,\n        public dialog: MatDialog\n    ) {}\n\n    ngOnInit(): void {\n        this.route.queryParams.subscribe((param) => {\n            this.test_id = param['test_id'];\n        });\n        this.getTestDetails(this.test_id);\n    }\n\n    ngAfterViewInit(): void {\n        this.paginator._intl.itemsPerPageLabel = 'Рядків у таблиці';\n        this.dataSource.paginator = this.paginator;\n        this.dataSource.sort = this.sort;\n    }\n\n    getTestDetails(id: number): void {\n        this.testDetailesSubscription = this.testService\n            .getTestDetailes('getTestDetailsByTest', id)\n            .subscribe(\n                (data: Array<TestDetails>) => {\n                    if (data[0]) {\n                        this.tests = data;\n                        this.dataSource.data = this.tests;\n                        this.levels = this.dataSource.data.map((item) =>\n                            Number(item.level)\n                        );\n                        this.getTestRate(this.test_id);\n                        this.dataSource.paginator = this.paginator;\n                        this.dataSource.sort = this.sort;\n                        this.modalService.showSnackBar(\n                            'Деталі тестів завантажено'\n                        );\n                    } else {\n                        this.levels = [];\n                    }\n                },\n                (err) => {\n                    this.modalService.showSnackBar(\n                        'Сталася помилка при завантаженні деталей тесту'\n                    );\n                }\n            );\n    }\n    getTestRate(id: number): void {\n        this.testDetailesSubscription = this.testService\n            .getTestDetailes('getTestRate', id)\n            .subscribe(\n                (data: TestRate) => {\n                    this.testRate = data.testRate;\n                },\n                (err) => {\n                    this.testRate = '0';\n                    this.modalService.showSnackBar('Дані відсутні');\n                }\n            );\n    }\n\n    applyFilter(event: Event): void {\n        const filterValue = (event.target as HTMLInputElement).value;\n        this.dataSource.filter = filterValue.trim().toLowerCase();\n        if (this.dataSource.paginator) this.dataSource.paginator.firstPage();\n    }\n\n    openAddDialog(): void {\n        const dialogRef = this.dialog.open(TestDetailsDialogComponent, {\n            width: '600px',\n            data: {\n                levels: this.levels,\n            },\n        });\n\n        dialogRef.afterClosed().subscribe((result) => {\n            if (result) this.addTest(result);\n        });\n    }\n\n    openEditDialog(test: TestDetails): void {\n        const dialogRef = this.dialog.open(TestDetailsDialogComponent, {\n            width: '600px',\n            data: {\n                rate: test.rate,\n                level: test.level,\n                tasks: test.tasks,\n                levels: this.levels,\n            },\n        });\n        dialogRef.afterClosed().subscribe((result) => {\n            if (result) {\n                this.editTest(result, test.test_id, test.id);\n            }\n        });\n    }\n\n    addTest(test: TestDetails): void {\n        const newTest = {\n            test_id: this.test_id,\n            ...test,\n        };\n        this.testDetailesSubscription = this.testService\n            .createEntity('testDetail', newTest)\n            .subscribe((result: TestDetails[]) => {\n                this.dataSource.data = this.dataSource.data.concat(result);\n                this.getTestRate(this.test_id);\n                this.dataSource.paginator.lastPage();\n                this.dataSource.paginator = this.paginator;\n                this.modalService.showSnackBar('Деталі тестів додано');\n            });\n    }\n\n    editTest(test: TestDetails, id: number, curId: number): void {\n        const newTest = {\n            test_id: id,\n            ...test,\n        };\n        this.testDetailesSubscription = this.testService\n            .updateEntity('TestDetail', newTest, curId)\n            .subscribe((data: TestDetails) => {\n                this.getTestRate(this.test_id);\n                const newSourse = this.dataSource.data.map((item) => {\n                    if (item.id === curId) {\n                        return (item = {\n                            ...data[0],\n                        });\n                    } else {\n                        return item;\n                    }\n                });\n                this.dataSource.data = newSourse;\n                this.modalService.showSnackBar('Деталі тесту оновлено');\n            });\n    }\n    removeTimeTable(test: TestDetails): void {\n        const dialogRef = this.dialog.open(ConfirmDeleteComponent, {\n            width: '300px',\n            data: {\n                group_name: test.test_id,\n            },\n        });\n        dialogRef.afterClosed().subscribe((result: boolean) => {\n            if (result) {\n                this.removeTest(test);\n            } else {\n                this.dataSource.paginator = this.paginator;\n                this.dataSource.sort = this.sort;\n            }\n        });\n    }\n    removeTest(test: TestDetails): void {\n        this.testDetailesSubscription = this.testService\n            .deleteEntity('testDetail', test.id)\n            .subscribe(\n                () => {\n                    this.dataSource.data = this.dataSource.data.filter(\n                        (t) => t.id !== test.id\n                    );\n                    this.getTestRate(this.test_id);\n                    this.modalService.showSnackBar('Деталі тесту видалено');\n                },\n                (error) =>\n                    this.modalService.showSnackBar('Тест неможливо видалити')\n            );\n    }\n\n    ngOnDestroy(): void {\n        if (this.testDetailesSubscription) {\n            this.testDetailesSubscription.unsubscribe();\n        }\n    }\n}\n","<div class=\"entity-header\">\n    <h1 class=\"mat-h1 entity-title\">\n        <mat-icon class=\"entity-title-icon\">details </mat-icon>\n        Деталі тесту\n    </h1>\n    <button mat-raised-button color=\"primary\" (click)=\"openAddDialog()\">\n        <mat-icon>add_circle</mat-icon> Додати деталі\n    </button>\n</div>\n\n<mat-form-field>\n    <mat-label class=\"entity-search-label\">\n        <mat-icon class=\"entity-search-icon\">person_search</mat-icon>\n        Пошук\n    </mat-label>\n    <input\n        matInput\n        (keyup)=\"applyFilter($event)\"\n        placeholder=\"Введіть тест\"\n        #input\n    />\n</mat-form-field>\n<div class=\"mat-elevation-z8\">\n    <table\n        mat-table\n        [dataSource]=\"dataSource\"\n        matSort\n        matSortStart=\"desc\"\n        #tabl\n        e\n    >\n        <ng-container matColumnDef=\"id\">\n            <th mat-header-cell *matHeaderCellDef mat-sort-header>№</th>\n            <td mat-cell *matCellDef=\"let element\">\n                {{ element.id }}\n            </td>\n        </ng-container>\n        <ng-container matColumnDef=\"level\">\n            <th mat-header-cell *matHeaderCellDef mat-sort-header>Рівень</th>\n            <td mat-cell *matCellDef=\"let element\">\n                {{ element.level }}\n            </td>\n        </ng-container>\n        <ng-container matColumnDef=\"tasks\">\n            <th mat-header-cell *matHeaderCellDef mat-sort-header>\n                Кількість завдань\n            </th>\n            <td mat-cell *matCellDef=\"let element\">{{ element.tasks }}</td>\n        </ng-container>\n        <ng-container matColumnDef=\"rate\">\n            <th mat-header-cell *matHeaderCellDef mat-sort-header>\n                Кількість балів\n            </th>\n            <td mat-cell *matCellDef=\"let element\">\n                {{ element.rate }}\n            </td>\n        </ng-container>\n        <ng-container matColumnDef=\"actions\">\n            <th mat-header-cell *matHeaderCellDef mat-sort-header>Дії</th>\n            <td mat-cell *matCellDef=\"let element\">\n                <button\n                    class=\"operation-button\"\n                    mat-flat-button\n                    color=\"primary\"\n                    (click)=\"openEditDialog(element)\"\n                >\n                    <mat-icon\n                        aria-hidden=\"false\"\n                        aria-label=\"edit\"\n                        matTooltip=\"Редагування\"\n                    >\n                        edit\n                    </mat-icon>\n                </button>\n                <button\n                    class=\"operation-button\"\n                    mat-flat-button\n                    color=\"primary\"\n                    (click)=\"removeTest(element)\"\n                >\n                    <mat-icon\n                        aria-hidden=\"false\"\n                        aria-label=\"delete\"\n                        matTooltip=\"Видалення\n                    \"\n                    >\n                        delete\n                    </mat-icon>\n                </button>\n            </td>\n        </ng-container>\n        <tr mat-header-row *matHeaderRowDef=\"displayedColumns\"></tr>\n        <tr mat-row *matRowDef=\"let row; columns: displayedColumns\"></tr>\n\n        <tr class=\"mat-row\" *matNoDataRow>\n            <td class=\"mat-cell\" colspan=\"4\">\n                Нічого не знайдено за заданим фільтром \"{{ input.value }}\"\n            </td>\n        </tr>\n    </table>\n    <div class=\"showRate\">\n        Максимальна кількість балів: <span>{{ testRate }}</span>\n    </div>\n    <mat-paginator [pageSizeOptions]=\"[5, 10, 25, 100]\"></mat-paginator>\n</div>\n","import { NgModule } from '@angular/core';\nimport { RouterModule, Routes } from '@angular/router';\nimport { CommonModule } from '@angular/common';\nimport { SharedModule } from '../../../shared/modules/shared.module';\n\nimport { TestDetailesComponent } from './test-detailes.component';\nimport { TestDetailsDialogComponent } from './test-details-dialog/test-details-dialog.component';\n\nconst testDetailsRoutes: Routes = [\n    { path: '', component: TestDetailesComponent },\n];\n\n@NgModule({\n    declarations: [TestDetailesComponent, TestDetailsDialogComponent],\n    imports: [\n        CommonModule,\n        SharedModule,\n        RouterModule.forChild(testDetailsRoutes),\n    ],\n})\nexport class TestDetailesModule {}\n","import { Component, OnInit, Inject } from '@angular/core';\n\nimport { FormBuilder, FormGroup, Validators } from '@angular/forms';\n\nimport { MatDialogRef, MAT_DIALOG_DATA } from '@angular/material/dialog';\n\nexport interface DialogData {\n    level: string;\n    tasks: string;\n    rate: string;\n    levels: Array<number>;\n}\n@Component({\n    selector: 'app-test-details-dialog',\n    templateUrl: './test-details-dialog.component.html',\n    styleUrls: ['./test-details-dialog.component.scss'],\n})\nexport class TestDetailsDialogComponent implements OnInit {\n    form: FormGroup;\n    newLevels: Array<any> = [];\n    constructor(\n        private formBuilder: FormBuilder,\n        public dialogRef: MatDialogRef<TestDetailsDialogComponent>,\n        @Inject(MAT_DIALOG_DATA) public data: DialogData\n    ) {}\n\n    ngOnInit() {\n        if (this.data.level) {\n            this.newLevels.push(this.data.level);\n        }\n        for (let i = 1; i <= 20; i++) {\n            if (!this.data.levels.includes(i)) {\n                this.newLevels.push(i);\n            }\n        }\n\n        this.form = this.formBuilder.group({\n            level: [\n                this.data.level ? this.data.level : '',\n                [Validators.required],\n            ],\n            tasks: [\n                this.data.tasks ? this.data.tasks : '',\n                [Validators.required],\n            ],\n            rate: [this.data.rate ? this.data.rate : '', [Validators.required]],\n        });\n    }\n    sendTest() {\n        this.dialogRef.close(this.form.value);\n    }\n}\n","<!-- <h3 mat-dialog-title>{{data.description.title}}</h3> -->\n<form [formGroup]=\"form\" (ngSubmit)=\"sendTest()\">\n    <div mat-dialog-content>\n        <mat-form-field class=\"example-full-width\">\n            <mat-label>Рівень</mat-label>\n            <mat-select formControlName=\"level\">\n                <mat-option *ngFor=\"let level of newLevels\" [value]=\"level\">\n                    {{ level }}\n                </mat-option>\n            </mat-select>\n            <mat-error\n                *ngIf=\"form.get('level').invalid && form.get('level').touched\"\n            >\n                Поле не має бути пустим\n            </mat-error>\n        </mat-form-field>\n        <mat-form-field class=\"example-full-width\">\n            <input\n                matInput\n                placeholder=\"Кількість завдань\"\n                formControlName=\"tasks\"\n            />\n            <mat-error\n                *ngIf=\"form.get('tasks').invalid && form.get('tasks').touched\"\n            >\n                Поле не має бути пустим\n            </mat-error>\n        </mat-form-field>\n        <mat-form-field class=\"example-full-width\">\n            <mat-label>Кількість балів</mat-label>\n            <input matInput type=\"number\" formControlName=\"rate\" required />\n            <mat-error\n                *ngIf=\"form.get('rate').invalid && form.get('rate').touched\"\n            >\n                Поле не має бути пустим\n            </mat-error>\n        </mat-form-field>\n    </div>\n    <div class=\"toolbar\" mat-dialog-actions>\n        <button mat-raised-button mat-dialog-close>Відмінити</button>\n        <button mat-button type=\"submit\" [disabled]=\"form.invalid\">\n            Зберегти\n        </button>\n    </div>\n</form>\n"],"sourceRoot":"webpack:///"}