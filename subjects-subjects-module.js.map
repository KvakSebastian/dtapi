{"version":3,"sources":["./src/app/modules/admin/subjects/subjects.service.ts","./src/app/modules/admin/subjects/subjects-home/subjects-home.component.ts","./src/app/modules/admin/subjects/subjects-home/subjects-home.component.html","./src/app/modules/admin/subjects/subjects.module.ts","./src/app/modules/admin/subjects/modal/modal.component.ts","./src/app/modules/admin/subjects/modal/modal.component.html"],"names":[],"mappings":"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","file":"subjects-subjects-module.js","sourcesContent":["import { Injectable } from '@angular/core';\nimport {\n    HttpClient,\n    HttpHeaders,\n    HttpErrorResponse,\n} from '@angular/common/http';\n\nimport { throwError } from 'rxjs';\nimport { catchError } from 'rxjs/operators';\n\nimport { environment } from '../../../../environments/environment';\n\nconst BASEURL = environment.BASEURL;\nconst entityURI = `${BASEURL}Subject`;\n\ninterface SubjectsResponse {\n    subject_id: number;\n    subject_name: string;\n    subject_description: string;\n}\ninterface SubjectsRequest {\n    subject_name: string;\n    subject_description: string;\n}\n\n@Injectable({\n    providedIn: 'root',\n})\nexport class SubjectsService {\n    constructor(private http: HttpClient) {}\n\n    public getData(id?: string) {\n        return this.http\n            .get<SubjectsResponse[]>(`${entityURI}/getRecords/${id}`)\n            .pipe(catchError(this.handleError));\n    }\n\n    public create = (body: SubjectsRequest) => {\n        return this.http\n            .post<SubjectsResponse>(\n                `${entityURI}/insertData`,\n                body,\n                this.generateHeaders()\n            )\n            .pipe(catchError(this.handleError));\n    };\n\n    public update = (id: number, body: SubjectsRequest) => {\n        return this.http\n            .post<SubjectsResponse>(\n                `${entityURI}/update/${id}`,\n                body,\n                this.generateHeaders()\n            )\n            .pipe(catchError(this.handleError));\n    };\n\n    public delete = (id: number) => {\n        return this.http\n            .delete(`${entityURI}/del/${id}`)\n            .pipe(catchError(this.handleError));\n    };\n\n    private handleError(error: HttpErrorResponse) {\n        if (error.error instanceof ErrorEvent) {\n            console.error('An error occurred:', error.error.message);\n        } else {\n            console.error(\n                `Backend returned code ${error.status}, ` +\n                    `body was: ${error.error}`\n            );\n        }\n        return throwError('Something bad happened; please try again later.');\n    }\n\n    private generateHeaders = () => {\n        return {\n            headers: new HttpHeaders({ 'Content-Type': 'application/json' }),\n        };\n    };\n}\n","import { Component, OnInit, ViewChild, AfterViewInit } from '@angular/core';\nimport { MatTableDataSource } from '@angular/material/table';\nimport { MatSort } from '@angular/material/sort';\nimport { MatPaginator } from '@angular/material/paginator';\nimport { MatDialog } from '@angular/material/dialog';\nimport { Router } from '@angular/router';\nimport { Subscription } from 'rxjs';\n\nimport { SubjectsService } from '../subjects.service';\nimport { ModalComponent } from '../modal/modal.component';\nimport { ModalService } from 'src/app/shared/services/modal.service';\nimport { ConfirmDeleteComponent } from '../../groups/confirm-delete/confirm-delete.component';\n\ninterface SubjectsResponse {\n    subject_id: number;\n    subject_name: string;\n    subject_description: string;\n}\ninterface SubjectsRequest {\n    subject_name: string;\n    subject_description: string;\n}\n\n@Component({\n    selector: 'app-owner-list',\n    templateUrl: './subjects-home.component.html',\n    styleUrls: ['./subjects-home.component.scss'],\n})\nexport class SubjectsHomeComponent implements OnInit, AfterViewInit {\n    public displayedColumns = [\n        '№',\n        'subject_name',\n        'subject_description',\n        'operations',\n    ];\n    public dataSource = new MatTableDataSource<SubjectsResponse>();\n    subjectSubscription: Subscription;\n\n    @ViewChild(MatSort) sort: MatSort;\n    @ViewChild(MatPaginator) paginator: MatPaginator;\n\n    constructor(\n        private subjectsService: SubjectsService,\n        public dialog: MatDialog,\n        private router: Router,\n        private modalService: ModalService\n    ) {}\n\n    ngOnInit() {\n        this.getSubjects();\n    }\n\n    ngAfterViewInit(): void {\n        this.paginator._intl.itemsPerPageLabel = 'Рядків у таблиці';\n        this.dataSource.sort = this.sort;\n        this.dataSource.paginator = this.paginator;\n    }\n\n    public getSubjects() {\n        this.subjectSubscription = this.subjectsService\n            .getData()\n            .subscribe((response) => {\n                this.dataSource.data = response;\n                this.modalService.showSnackBar('Предмети завантажено');\n            });\n    }\n\n    public redirectToCreate = (data: SubjectsRequest) => {\n        this.subjectSubscription = this.subjectsService\n            .create(data)\n            .subscribe((result: SubjectsResponse) => {\n                this.dataSource.data = this.dataSource.data.concat(result[0]);\n                this.dataSource.paginator.lastPage();\n                this.modalService.showSnackBar('Предмети додано');\n            });\n    };\n\n    public redirectToUpdate = (id: number, body: SubjectsResponse) => {\n        this.subjectSubscription = this.subjectsService\n            .update(id, body)\n            .subscribe((result: SubjectsResponse) => {\n                const newSourse = this.dataSource.data.map((item) => {\n                    if (item.subject_id === id) {\n                        return (item = {\n                            ...result[0],\n                        });\n                    } else {\n                        return item;\n                    }\n                });\n                this.dataSource.data = newSourse;\n                this.modalService.showSnackBar('Предмети оновлено');\n            });\n    };\n    redirectToDelete(subject: SubjectsResponse): void {\n        const dialogRef = this.dialog.open(ConfirmDeleteComponent, {\n            width: '300px',\n            data: {\n                group_name: subject.subject_name,\n            },\n        });\n        dialogRef.afterClosed().subscribe((result: boolean) => {\n            if (result) {\n                this.delete(subject.subject_id);\n            } else {\n                this.dataSource.paginator = this.paginator;\n                this.dataSource.sort = this.sort;\n            }\n        });\n    }\n    public delete = (id: number) => {\n        this.subjectSubscription = this.subjectsService.delete(id).subscribe(\n            () => {\n                this.dataSource.data = this.dataSource.data.filter(\n                    (item) => item.subject_id !== id\n                );\n                this.modalService.showSnackBar('Предмети видалено');\n            },\n            (error) =>\n                this.modalService.showSnackBar('Помилка при видаленні предмету')\n        );\n    };\n\n    public onCreate(): void {\n        const dialogRef = this.dialog.open(ModalComponent, {\n            width: '300px',\n        });\n\n        dialogRef.afterClosed().subscribe((result: SubjectsRequest) => {\n            if (result) {\n                const updResult = { ...result };\n                for (const k in updResult) {\n                    if (!updResult[k]) delete updResult[k];\n                }\n                this.redirectToCreate(updResult);\n            }\n        });\n    }\n\n    public onEdit(element: SubjectsResponse): void {\n        const dialogRef = this.dialog.open(ModalComponent, {\n            width: '300px',\n            data: element,\n        });\n\n        dialogRef.afterClosed().subscribe((result: SubjectsResponse) => {\n            if (result) {\n                this.redirectToUpdate(result.subject_id, result);\n            }\n        });\n    }\n\n    applyFilter(event: Event): void {\n        const filterValue = (event.target as HTMLInputElement).value;\n        this.dataSource.filter = filterValue.trim().toLowerCase();\n        if (this.dataSource.paginator) {\n            this.dataSource.paginator.firstPage();\n        }\n    }\n\n    public redirectToTests(id: string) {\n        this.router.navigate(['admin/subjects/tests/', id], {});\n    }\n    public redirectToTimetable(subject: SubjectsResponse) {\n        this.router.navigate(['admin/subjects/timetable/'], {\n            queryParams: {\n                subject_name: subject.subject_name,\n                subject_id: subject.subject_id,\n            },\n        });\n    }\n    ngOnDestroy(): void {\n        if (this.subjectSubscription) {\n            this.subjectSubscription.unsubscribe();\n        }\n    }\n}\n","<div class=\"entity-header\">\n    <h1 class=\"mat-h1 entity-title\">\n        <mat-icon class=\"entity-title-icon\">collections_bookmark</mat-icon>\n        Предмети\n    </h1>\n\n    <button mat-raised-button color=\"primary\" (click)=\"onCreate()\">\n        <mat-icon>add_circle</mat-icon> Додати Предмет\n    </button>\n</div>\n<mat-form-field class=\"entity-table-filter filter\">\n    <mat-label class=\"entity-search-label\">\n        <mat-icon class=\"entity-search-icon\">person_search</mat-icon>\n        Пошук\n    </mat-label>\n    <input\n        matInput\n        (keyup)=\"applyFilter($event)\"\n        placeholder=\"Здійснюйте фільтрацію по всіх колонках таблиці\"\n        #input\n    />\n</mat-form-field>\n<div class=\"mat-elevation-z8\">\n    <table mat-table [dataSource]=\"dataSource\" matSort matSortStart=\"desc\">\n        <ng-container matColumnDef=\"№\">\n            <th mat-header-cell *matHeaderCellDef mat-sort-header>№</th>\n            <td mat-cell *matCellDef=\"let element\">\n                {{ dataSource.data.indexOf(element) + 1 }}\n            </td>\n        </ng-container>\n\n        <ng-container matColumnDef=\"subject_name\">\n            <th mat-header-cell *matHeaderCellDef mat-sort-header>Назва</th>\n            <td mat-cell *matCellDef=\"let element\">\n                {{ element.subject_name }}\n            </td>\n        </ng-container>\n\n        <ng-container matColumnDef=\"subject_description\">\n            <th mat-header-cell *matHeaderCellDef mat-sort-header>Опис</th>\n            <td mat-cell *matCellDef=\"let element\">\n                {{ element.subject_description }}\n            </td>\n        </ng-container>\n\n        <ng-container matColumnDef=\"operations\">\n            <th mat-header-cell *matHeaderCellDef>Опції</th>\n            <td mat-cell *matCellDef=\"let element\">\n                <button\n                    class=\"operation-button\"\n                    mat-flat-button\n                    color=\"primary\"\n                    (click)=\"redirectToTimetable(element)\"\n                    matTooltip=\"Перейти до розкладу\"\n                >\n                    <mat-icon class=\"mat-18\">date_range</mat-icon>\n                </button>\n                <button\n                    class=\"operation-button\"\n                    mat-flat-button\n                    color=\"primary\"\n                    (click)=\"redirectToTests(element.subject_id)\"\n                    matTooltip=\"Перейти до тестів\"\n                >\n                    <mat-icon class=\"mat-18\">fact_check</mat-icon>\n                </button>\n                <button\n                    class=\"operation-button\"\n                    mat-flat-button\n                    color=\"primary\"\n                    (click)=\"onEdit(element)\"\n                    matTooltip=\"Оновити\"\n                >\n                    <mat-icon class=\"mat-18\">system_update</mat-icon>\n                </button>\n                <button\n                    class=\"operation-button\"\n                    mat-flat-button\n                    color=\"primary\"\n                    (click)=\"redirectToDelete(element)\"\n                    matTooltip=\"Видалити\"\n                >\n                    <mat-icon class=\"mat-18\">delete</mat-icon>\n                </button>\n            </td>\n        </ng-container>\n\n        <tr mat-header-row *matHeaderRowDef=\"displayedColumns\"></tr>\n        <tr mat-row *matRowDef=\"let row; columns: displayedColumns\"></tr>\n        <tr class=\"mat-row\" *matNoDataRow>\n            <td class=\"mat-cell\" colspan=\"4\">\n                Нічого не знайдено за заданим фільтром \"{{ input.value }}\"\n            </td>\n        </tr>\n    </table>\n    <mat-paginator [pageSizeOptions]=\"[5, 10, 15, 20, 25]\"> </mat-paginator>\n</div>\n","import { NgModule } from '@angular/core';\nimport { Routes, RouterModule } from '@angular/router';\nimport { CommonModule } from '@angular/common';\n\nimport { SharedModule } from '../../../shared/modules/shared.module';\n\nimport { SubjectsHomeComponent } from './subjects-home/subjects-home.component';\nimport { ModalComponent } from './modal/modal.component';\n\nconst routes: Routes = [{ path: '', component: SubjectsHomeComponent }];\n\n@NgModule({\n    declarations: [SubjectsHomeComponent, ModalComponent],\n    imports: [CommonModule, SharedModule, RouterModule.forChild(routes)],\n    exports: [],\n})\nexport class SubjectsModule {}\n","import { Component, OnInit, Inject } from '@angular/core';\nimport { MatDialogRef, MAT_DIALOG_DATA } from '@angular/material/dialog';\nimport { FormControl, FormGroup, Validators } from '@angular/forms';\n\ninterface SubjectsResponse {\n    subject_id: number;\n    subject_name: string;\n    subject_description: string;\n}\n\n@Component({\n    selector: 'app-modal',\n    templateUrl: './modal.component.html',\n    styleUrls: ['./modal.component.scss'],\n})\nexport class ModalComponent implements OnInit {\n    public subjectForm = new FormGroup({\n        subject_name: new FormControl(this.data ? this.data.subject_name : '', [\n            Validators.required,\n        ]),\n        subject_description: new FormControl(\n            this.data ? this.data.subject_description : '',\n            [Validators.required]\n        ),\n        subject_id: new FormControl(this.data ? this.data.subject_id : ''),\n    });\n\n    constructor(\n        public dialogRef: MatDialogRef<ModalComponent>,\n        @Inject(MAT_DIALOG_DATA) public data: SubjectsResponse\n    ) {}\n\n    ngOnInit(): void {}\n\n    public onSubmit() {\n        if (\n            this.subjectForm.valid &&\n            this.subjectForm.touched &&\n            this.subjectForm.dirty\n        ) {\n            this.dialogRef.close(this.subjectForm.value);\n        }\n    }\n\n    public onClose(): void {\n        this.dialogRef.close(false);\n    }\n\n    hasError = (controlName: string, errorName: string) => {\n        return this.subjectForm.controls[controlName].hasError(errorName);\n    };\n}\n","<form (ngSubmit)=\"onSubmit()\" [formGroup]=\"subjectForm\" class=\"example-form\">\n    <h1 mat-dialog-title class=\"modal-title\">\n        {{ !data ? 'Додати новий' : 'Редагувати' }} предмет\n    </h1>\n    <div mat-dialog-content>\n        <mat-form-field class=\"modal-field\">\n            <mat-label class=\"modal-entity-input\"\n                ><mat-icon>collections_bookmark</mat-icon> Назва\n                Предмету</mat-label\n            >\n            <input matInput formControlName=\"subject_name\" />\n            <mat-error *ngIf=\"hasError('subject_name', 'required')\"\n                >Це поле є обов'язковим</mat-error\n            >\n        </mat-form-field>\n    </div>\n\n    <div mat-dialog-content>\n        <mat-form-field appearance=\"outline\">\n            <textarea\n                placeholder=\"Опис Предмету\"\n                formControlName=\"subject_description\"\n                matInput\n                rows=\"5\"\n                cols=\"40\"\n            ></textarea>\n            <mat-error *ngIf=\"hasError('subject_description', 'required')\"\n                >Це поле є обов'язковим</mat-error\n            >\n        </mat-form-field>\n    </div>\n    <div mat-dialog-actions class=\"modal-field\">\n        <button mat-button type=\"reset\" (click)=\"onClose()\">Відмінити</button>\n        <button\n            mat-button\n            cdkFocusInitial\n            [disabled]=\"!subjectForm.valid\"\n            (click)=\"onSubmit()\"\n        >\n            {{ !data ? 'Додати' : 'Редагувати' }}\n        </button>\n    </div>\n</form>\n"],"sourceRoot":"webpack:///"}